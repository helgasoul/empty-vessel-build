/**
 * types/gail-calculator.ts
 * 
 * –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Enhanced Gail Calculator
 * üíñ –ü–æ–ª–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */

// ========================================
// –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã
// ========================================

export type RiskLevel = 'low' | 'moderate' | 'high' | 'very_high';
export type RecommendationType = 'lifestyle' | 'screening' | 'genetic' | 'medical';

// ========================================
// –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
// ========================================

export interface PersonalInfo {
  age: number;
  race: 'caucasian' | 'african_american' | 'hispanic' | 'asian' | 'other';
  height?: number; // —Å–º
  weight?: number; // –∫–≥
  bmi?: number; // —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
}

// ========================================
// –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è
// ========================================

export interface HormonalTherapy {
  everUsed: boolean;
  currentlyUsing?: boolean;
  durationMonths?: number;
  type?: 'estrogen_only' | 'combined' | 'other';
}

export interface HormonalContraception {
  everUsed: boolean;
  currentlyUsing?: boolean;
  durationMonths?: number;
  ageStarted?: number;
  ageStopped?: number;
}

export interface MedicalHistory {
  ageAtMenarche: number; // –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏
  ageAtFirstBirth?: number; // –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤ (undefined –µ—Å–ª–∏ –Ω–µ —Ä–æ–∂–∞–ª–∞)
  numberOfBirths: number; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥–æ–≤
  numberOfBiopsies: number; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã
  atypicalHyperplasia: boolean; // –∞—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è
  lobularCarcinomaInSitu: boolean; // –¥–æ–ª—å–∫–æ–≤–∞—è –∫–∞—Ä—Ü–∏–Ω–æ–º–∞ in situ
  hormonalReplacementTherapy?: HormonalTherapy;
  hormonalContraception?: HormonalContraception;
  breastfeedingMonths?: number; // –æ–±—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä—É–¥–Ω–æ–≥–æ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏—è
  ageAtMenopause?: number; // –≤–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–æ–ø–∞—É–∑—ã (–µ—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–∞)
}

// ========================================
// –°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
// ========================================

export interface FirstDegreeRelatives {
  mother: boolean;
  sisters: number;
  daughters: number;
}

export interface FamilyHistory {
  breastCancerRelatives: number; // –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ —Å –†–ú–ñ
  ovarianCancerRelatives: number; // —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ —Å —Ä–∞–∫–æ–º —è–∏—á–Ω–∏–∫–æ–≤
  firstDegreeRelatives?: FirstDegreeRelatives; // —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏
  maleBreastCancer: boolean; // –º—É–∂—á–∏–Ω—ã –≤ —Å–µ–º—å–µ —Å –†–ú–ñ
  knownGeneticMutations?: string[]; // –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –º—É—Ç–∞—Ü–∏–∏ (BRCA1, BRCA2, etc.)
  averageAgeAtDiagnosis?: number; // —Å—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ —Å–µ–º—å–µ
  paternalHistory?: boolean; // –∏—Å—Ç–æ—Ä–∏—è –ø–æ –æ—Ç—Ü–æ–≤—Å–∫–æ–π –ª–∏–Ω–∏–∏
  maternalHistory?: boolean; // –∏—Å—Ç–æ—Ä–∏—è –ø–æ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–π –ª–∏–Ω–∏–∏
}

// ========================================
// –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
// ========================================

export interface SmokingHistory {
  status: 'never' | 'former' | 'current';
  packYears?: number; // –ø–∞—á–∫–æ-–ª–µ—Ç
  ageStarted?: number;
  ageStopped?: number;
}

export interface AlcoholConsumption {
  frequency: 'never' | 'rarely' | 'moderate' | 'heavy';
  drinksPerWeek?: number;
  yearsOfConsumption?: number;
}

export interface PhysicalActivity {
  level: 'sedentary' | 'light' | 'moderate' | 'vigorous';
  hoursPerWeek?: number;
  primaryActivities?: string[];
}

export interface SleepPattern {
  averageHours?: number;
  quality: 'poor' | 'fair' | 'good' | 'excellent';
  regularSchedule?: boolean;
}

export interface StressLevel {
  level: number; // 1-10
  managementMethods?: ('meditation' | 'yoga' | 'exercise' | 'therapy' | 'none')[];
  chronicStressors?: string[];
}

export interface DietPattern {
  type: 'vegetarian' | 'vegan' | 'mixed' | 'mediterranean' | 'ketogenic';
  vegetableFruitServings?: number;
  redMeatFrequency?: 'never' | 'rarely' | 'weekly' | 'daily';
  fatIntake?: 'low' | 'moderate' | 'high';
}

export interface LifestyleFactors {
  smoking?: SmokingHistory;
  alcohol?: AlcoholConsumption;
  physicalActivity?: PhysicalActivity;
  sleep?: SleepPattern;
  stress?: StressLevel;
  diet?: DietPattern;
  occupationalExposures?: string[];
  environmentalFactors?: {
    airQuality?: 'poor' | 'moderate' | 'good';
    chemicalExposures?: string[];
    radiationExposure?: boolean;
  };
}

// ========================================
// –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
// ========================================

export interface GeneticVariant {
  gene: string;
  variant: string;
  significance: 'pathogenic' | 'likely_pathogenic' | 'uncertain' | 'benign';
  riskContribution: number; // –≤–∫–ª–∞–¥ –≤ —Ä–∏—Å–∫ (–º–Ω–æ–∂–∏—Ç–µ–ª—å)
}

export interface GeneticRiskFactors {
  source: '23andme' | 'ancestrydna' | 'myheritage' | 'genetico' | 'genotek' | 'other';
  uploadDate: string;
  totalSnps: number;
  significantVariants: number;
  riskFactors?: {
    [gene: string]: 'low' | 'moderate' | 'high';
  };
  polygeneticRiskScore?: number;
  brca1Status?: 'normal' | 'variant' | 'pathogenic';
  brca2Status?: 'normal' | 'variant' | 'pathogenic';
  otherGenes?: GeneticVariant[];
  ethnicity?: string; // –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç—Ç–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å
}

// ========================================
// –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
// ========================================

export interface GailCalculatorInput {
  personalInfo: PersonalInfo;
  medicalHistory: MedicalHistory;
  familyHistory: FamilyHistory;
  lifestyle: LifestyleFactors;
  calculationDate: Date;
  userId: string;
}

// ========================================
// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤
// ========================================

export interface RiskFactor {
  name: string;
  value: string | number;
  impact: 'protective' | 'neutral' | 'moderate' | 'high';
  description: string;
  evidenceLevel?: 'low' | 'moderate' | 'high';
}

export interface Recommendation {
  id: string;
  title: string;
  description: string;
  type: RecommendationType;
  priority: 'low' | 'medium' | 'high';
  actionItems?: string[];
  timeframe?: string;
  expectedBenefit?: string;
}

export interface GailCalculatorResult {
  calculationId: string;
  userId: string;
  calculationDate: Date;
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  fiveYearRisk: number; // 5-–ª–µ—Ç–Ω–∏–π –∞–±—Å–æ–ª—é—Ç–Ω—ã–π —Ä–∏—Å–∫ (%)
  lifetimeRisk: number; // –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ (%)
  relativeRisk: number; // –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∏—Å–∫ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–æ–ø—É–ª—è—Ü–∏–µ–π
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  riskLevel: RiskLevel;
  riskFactors?: RiskFactor[];
  recommendations?: Recommendation[];
  populationComparison?: string;
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
  modelVersion: string;
  confidenceInterval?: {
    lower: number;
    upper: number;
  };
}

// ========================================
// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
// ========================================

export interface GeneticContribution {
  riskContribution: number; // –≤–∫–ª–∞–¥ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –≤ –æ–±—â–∏–π —Ä–∏—Å–∫
  significantVariants?: string[];
  polygeneticScore?: number;
  heritabilityEstimate?: number;
}

export interface CombinedRisk {
  fiveYear: number;
  tenYear: number;
  lifetime: number;
  nextDecade?: number;
}

export interface EnhancedGailResult extends Omit<GailCalculatorResult, 'fiveYearRisk' | 'lifetimeRisk'> {
  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏
  combinedRisk: CombinedRisk;
  
  // –í–∫–ª–∞–¥—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
  geneticContribution?: GeneticContribution;
  lifestyleContribution?: {
    protectiveFactors: string[];
    riskFactors: string[];
    modifiableRisk: number; // –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
  };
  
  // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã
  personalizedRecommendations?: Recommendation[];
  screeningSchedule?: {
    mammography: string;
    clinicalExam: string;
    selfExam: string;
    mri?: string;
    geneticCounseling?: string;
  };
  
  // –ü—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏
  riskTrajectory?: {
    age: number;
    risk: number;
  }[];
}

// ========================================
// –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
// ========================================

export interface ValidationError {
  field: string;
  message: string;
  code?: string;
}

// ========================================
// –£—Ç–∏–ª–∏—Ç—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
// ========================================

export interface CalculationProgress {
  stage: string;
  current: number;
  total: number;
  message?: string;
}

export interface GailCalculatorUtils {
  formatRiskPercentage: (risk: number) => string;
  calculateBMI: (height: number, weight: number) => number;
  getRiskLevel: (risk: number) => RiskLevel;
  compareToPopulation: (risk: number, age: number, race: string) => string;
  generateRecommendations: (result: GailCalculatorResult | EnhancedGailResult) => Recommendation[];
  exportResults: (format: 'json' | 'pdf' | 'csv') => string;
}

// ========================================
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
// ========================================

export interface GailCalculatorConfig {
  autoSaveHistory?: boolean;
  enableEnhancedAnalysis?: boolean;
  enableGeneticAnalysis?: boolean;
  enableEnvironmentalAnalysis?: boolean;
  onProgress?: (progress: CalculationProgress) => void;
  onCalculationComplete?: (result: GailCalculatorResult | EnhancedGailResult) => void;
  onError?: (error: string) => void;
}

// ========================================
// –•—É–∫–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
// ========================================

export interface UseGailCalculatorReturn {
  // –ú–µ—Ç–æ–¥—ã —Ä–∞—Å—á–µ—Ç–∞
  calculateRisk: (input: GailCalculatorInput) => Promise<GailCalculatorResult>;
  calculateEnhancedRisk: (
    input: GailCalculatorInput,
    geneticData?: GeneticRiskFactors,
    environmentalData?: any
  ) => Promise<EnhancedGailResult>;
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  currentResult?: GailCalculatorResult | null;
  enhancedResult?: EnhancedGailResult | null;
  isCalculating: boolean;
  progress?: CalculationProgress;
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ—à–∏–±–∫–∏
  validationErrors: ValidationError[];
  hasValidationErrors: boolean;
  
  // –£—Ç–∏–ª–∏—Ç—ã
  utils: GailCalculatorUtils;
  clearResults: () => void;
  exportResults: (format: 'json' | 'pdf' | 'csv') => string;
}

export interface UseGeneticDataReturn {
  uploadGeneticFile: (file: File, userId: string, source: string) => Promise<GeneticRiskFactors>;
  geneticData?: GeneticRiskFactors | null;
  isUploading: boolean;
  uploadProgress?: number;
  error?: string | null;
}

export interface UseWearableSyncReturn {
  connectedDevices: any[];
  syncDevice: (deviceType: string, data: any) => Promise<void>;
  issyncing: boolean;
  lastSyncDate?: Date;
}

export interface UseNotificationsReturn {
  showSuccessNotification: (title: string, message: string) => void;
  showErrorNotification: (title: string, message: string) => void;
  showHealthReminder: (type: string, message: string) => void;
}

export interface UseFormValidationReturn {
  validateForm: (data: any) => boolean;
  getFieldStatus: (field: string) => 'valid' | 'invalid' | 'pending';
  hasErrors: boolean;
  clearErrors: () => void;
}