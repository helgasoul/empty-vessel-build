
import React, { useState, useEffect } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { PatientDataManager } from '@/services/PatientDataManager';
import { PatientProfile } from '@/types/patient';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { 
  Heart, 
  Activity, 
  Brain, 
  FileText, 
  Users, 
  Calendar,
  AlertTriangle,
  TrendingUp,
  Shield,
  Stethoscope,
  Plus,
  Settings
} from 'lucide-react';
import { toast } from 'sonner';

// –ò–º–ø–æ—Ä—Ç –≤–∏–¥–∂–µ—Ç–æ–≤
import RiskAssessmentWidget from './widgets/RiskAssessmentWidget';
import HealthStatusWidget from './widgets/HealthStatusWidget';
import LabResultsWidget from './widgets/LabResultsWidget';
import AIRecommendationsWidget from './widgets/AIRecommendationsWidget';
import QuickActionsWidget from './widgets/QuickActionsWidget';

// –ò–º–ø–æ—Ä—Ç —Å–µ–∫—Ü–∏–π
import HealthAssessmentSection from './sections/HealthAssessmentSection';
import RiskFactorsSection from './sections/RiskFactorsSection';
import LabResultsSection from './sections/LabResultsSection';
import AIRecommendationsSection from './sections/AIRecommendationsSection';

export default function IntegratedPatientDashboard() {
  const { user } = useAuth();
  const [patientData, setPatientData] = useState<PatientProfile | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [activeSection, setActiveSection] = useState('overview');
  const [dataManager] = useState(() => new PatientDataManager());

  useEffect(() => {
    if (user?.id) {
      loadPatientData();
    }
  }, [user]);

  const loadPatientData = async () => {
    try {
      setIsLoading(true);
      const data = await dataManager.loadPatientData(user!.id);
      setPatientData(data);
    } catch (error) {
      console.error('Error loading patient data:', error);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞');
    } finally {
      setIsLoading(false);
    }
  };

  const sections = [
    { id: 'overview', name: '–û–±–∑–æ—Ä', icon: TrendingUp },
    { id: 'health-assessment', name: '–û—Ü–µ–Ω–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è', icon: Heart },
    { id: 'risk-factors', name: '–§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞', icon: AlertTriangle },
    { id: 'lab-results', name: '–ê–Ω–∞–ª–∏–∑—ã', icon: FileText },
    { id: 'ai-recommendations', name: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ò–ò', icon: Brain },
    { id: 'family-history', name: '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è', icon: Users },
    { id: 'doctors', name: '–ú–æ–∏ –≤—Ä–∞—á–∏', icon: Stethoscope }
  ];

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-orange-50 flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-rose-200 border-t-rose-500 rounded-full animate-spin mx-auto mb-4"></div>
          <h2 className="text-xl font-semibold text-gray-800 mb-2">YTime PREVENT</h2>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50 to-orange-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-rose-100 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="w-16 h-16 bg-gradient-to-r from-rose-400 to-pink-400 rounded-full flex items-center justify-center text-white text-2xl">
                üë©‚Äçüíº
              </div>
              <div>
                <h1 className="text-2xl font-bold text-gray-800">
                  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {patientData?.personalInfo.name}!
                </h1>
                <p className="text-gray-600">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-3">
              <Button className="bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600">
                <Plus className="w-4 h-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </Button>
              <Button variant="outline" className="border-rose-200 text-rose-600 hover:bg-rose-50">
                <Stethoscope className="w-4 h-4 mr-2" />
                –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤—Ä–∞—á–æ–º
              </Button>
              <Button variant="ghost" size="icon">
                <Settings className="w-5 h-5" />
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Navigation */}
      <nav className="bg-white/50 backdrop-blur-sm border-b border-rose-100">
        <div className="max-w-7xl mx-auto px-6">
          <div className="flex space-x-1 overflow-x-auto">
            {sections.map((section) => {
              const IconComponent = section.icon;
              return (
                <button
                  key={section.id}
                  onClick={() => setActiveSection(section.id)}
                  className={`flex items-center space-x-2 px-6 py-3 rounded-t-lg transition-all duration-200 whitespace-nowrap ${
                    activeSection === section.id
                      ? 'bg-white border-rose-500 text-rose-600 shadow-sm border-b-2'
                      : 'text-gray-600 hover:text-rose-600 hover:bg-white/50'
                  }`}
                >
                  <IconComponent className="w-4 h-4" />
                  <span className="font-medium">{section.name}</span>
                </button>
              );
            })}
          </div>
        </div>
      </nav>

      {/* Content */}
      <main className="max-w-7xl mx-auto px-6 py-8">
        {activeSection === 'overview' && (
          <div className="space-y-8">
            {/* –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <Card className="bg-gradient-to-r from-blue-500 to-blue-600 text-white">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="text-blue-100">–û–±—â–∏–π —Ä–∏—Å–∫</p>
                      <p className="text-2xl font-bold">–ù–∏–∑–∫–∏–π</p>
                    </div>
                    <Shield className="w-8 h-8 text-blue-200" />
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gradient-to-r from-green-500 to-green-600 text-white">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="text-green-100">–ê–Ω–∞–ª–∏–∑—ã</p>
                      <p className="text-2xl font-bold">{patientData?.labResults.length || 0}</p>
                    </div>
                    <FileText className="w-8 h-8 text-green-200" />
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gradient-to-r from-purple-500 to-purple-600 text-white">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="text-purple-100">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</p>
                      <p className="text-2xl font-bold">{patientData?.aiRecommendations.filter(r => r.status === 'new').length || 0}</p>
                    </div>
                    <Brain className="w-8 h-8 text-purple-200" />
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gradient-to-r from-orange-500 to-orange-600 text-white">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="text-orange-100">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                      <p className="text-2xl font-bold">8,450</p>
                    </div>
                    <Activity className="w-8 h-8 text-orange-200" />
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              <RiskAssessmentWidget data={patientData?.riskFactors} />
              <HealthStatusWidget data={patientData?.healthAssessment} />
              <LabResultsWidget data={patientData?.labResults} />
              <AIRecommendationsWidget data={patientData?.aiRecommendations} />
              <QuickActionsWidget onActionClick={(action) => console.log('Quick action:', action)} />
              
              {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
              <Card className="bg-white/80 backdrop-blur-sm border border-rose-100">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Calendar className="w-5 h-5" />
                    –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-600">–°–µ–≥–æ–¥–Ω—è</span>
                      <Badge variant="secondary">8,450 —à–∞–≥–æ–≤</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-600">–°–æ–Ω</span>
                      <Badge variant="secondary">7—á 30–º</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-600">–ü—É–ª—å—Å</span>
                      <Badge variant="secondary">72 —É–¥/–º–∏–Ω</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
            <Card className="bg-white/80 backdrop-blur-sm border border-rose-100">
              <CardHeader>
                <CardTitle>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-start space-x-3">
                    <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                    <div>
                      <p className="font-medium">–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤</p>
                      <p className="text-sm text-gray-600">–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ ‚Ä¢ 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                    <div>
                      <p className="font-medium">–ù–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ò–ò</p>
                      <p className="text-sm text-gray-600">–£–≤–µ–ª–∏—á–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–∏—Ç–∞–º–∏–Ω–∞ D ‚Ä¢ 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <div className="w-2 h-2 bg-purple-500 rounded-full mt-2"></div>
                    <div>
                      <p className="font-medium">–û–±–Ω–æ–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤</p>
                      <p className="text-sm text-gray-600">–°–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è ‚Ä¢ 3 –¥–Ω—è –Ω–∞–∑–∞–¥</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeSection === 'health-assessment' && (
          <HealthAssessmentSection 
            data={patientData?.healthAssessment}
            onUpdate={(data) => dataManager.saveHealthAssessment(data)}
          />
        )}

        {activeSection === 'risk-factors' && (
          <RiskFactorsSection 
            data={patientData?.riskFactors}
            onUpdate={(data) => console.log('Update risk factors:', data)}
          />
        )}

        {activeSection === 'lab-results' && (
          <LabResultsSection 
            data={patientData?.labResults || []}
            onUpload={(result) => dataManager.saveLabResults(result)}
          />
        )}

        {activeSection === 'ai-recommendations' && (
          <AIRecommendationsSection 
            data={patientData?.aiRecommendations || []}
            onAction={(recommendationId, action) => 
              dataManager.handleRecommendationAction(recommendationId, action)
            }
          />
        )}

        {activeSection === 'family-history' && (
          <div className="text-center py-12">
            <Users className="w-16 h-16 text-gray-400 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-800 mb-2">–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è</h3>
            <p className="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤–∞—à–∏—Ö —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤</p>
            <Button className="bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600">
              –î–æ–±–∞–≤–∏—Ç—å —Å–µ–º–µ–π–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
            </Button>
          </div>
        )}

        {activeSection === 'doctors' && (
          <div className="text-center py-12">
            <Stethoscope className="w-16 h-16 text-gray-400 mx-auto mb-4" />
            <h3 className="text-xl font-semibold text-gray-800 mb-2">–ú–æ–∏ –≤—Ä–∞—á–∏</h3>
            <p className="text-gray-600 mb-6">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ –≤–∞—à–∏–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º</p>
            <Button className="bg-gradient-to-r from-rose-500 to-pink-500 hover:from-rose-600 hover:to-pink-600">
              –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤—Ä–∞—á—É
            </Button>
          </div>
        )}
      </main>
    </div>
  );
}
