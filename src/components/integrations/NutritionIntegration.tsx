import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { 
  Apple, 
  Utensils, 
  Target, 
  TrendingUp,
  Clock,
  Droplets,
  Camera,
  Plus,
  ChefHat,
  BookOpen,
  Zap
} from "lucide-react";
import { toast } from "sonner";
import RecipeModal from './nutrition/RecipeModal';
import { Recipe, NutritionGoal, MealPlan } from './nutrition/types';

const NutritionIntegration = () => {
  const [activeTab, setActiveTab] = useState<'today' | 'plans' | 'recipes'>('today');
  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);

  const dailyGoals: NutritionGoal[] = [
    { name: '–ö–∞–ª–æ—Ä–∏–∏', current: 1680, target: 2000, unit: '–∫–∫–∞–ª', color: 'bg-blue-500' },
    { name: '–ë–µ–ª–∫–∏', current: 85, target: 120, unit: '–≥', color: 'bg-green-500' },
    { name: '–ñ–∏—Ä—ã', current: 65, target: 80, unit: '–≥', color: 'bg-yellow-500' },
    { name: '–£–≥–ª–µ–≤–æ–¥—ã', current: 180, target: 250, unit: '–≥', color: 'bg-purple-500' },
    { name: '–í–æ–¥–∞', current: 6, target: 8, unit: '—Å—Ç–∞–∫–∞–Ω–æ–≤', color: 'bg-cyan-500' },
    { name: '–ö–ª–µ—Ç—á–∞—Ç–∫–∞', current: 18, target: 25, unit: '–≥', color: 'bg-emerald-500' }
  ];

  const mealPlans: MealPlan[] = [
    {
      id: '1',
      name: '–ò–ò: –ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å+',
      description: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–µ–≥–æ —Ü–∏–∫–ª–∞ –∏ —Å–∏–º–ø—Ç–æ–º–æ–≤',
      calories_per_day: 1850,
      duration_days: 14,
      meals_per_day: 5,
      dietary_restrictions: ['–ë–µ–∑ –≥–ª—é—Ç–µ–Ω–∞', '–ù–∏–∑–∫–∏–π –ì–ò', '–û–º–µ–≥–∞-3'],
      benefits: ['–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —Ü–∏–∫–ª–∞', '–≠–Ω–µ—Ä–≥–∏—è', '–ö—Ä–∞—Å–æ—Ç–∞ –∫–æ–∂–∏', '–°–Ω–∏–∂–µ–Ω–∏–µ –ü–ú–°'],
      difficulty: '–°—Ä–µ–¥–Ω–∏–π',
      thumbnail: 'https://images.unsplash.com/photo-1490645935967-10de6ba17061?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      price: 2500,
      aiPersonalized: true,
      matchScore: 94
    },
    {
      id: '2',
      name: '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –ø–æ —Ñ–∞–∑–∞–º',
      description: '–ò–ò-–ø–ª–∞–Ω, –º–µ–Ω—è—é—â–∏–π—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã –≤–∞—à–µ–≥–æ —Ü–∏–∫–ª–∞',
      calories_per_day: 1800,
      duration_days: 28,
      meals_per_day: 6,
      dietary_restrictions: ['–¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ', '–ë–µ–∑ —Å–∞—Ö–∞—Ä–∞', '–û—Ä–≥–∞–Ω–∏–∫'],
      benefits: ['–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Ü–∏–∫–ª–æ–º', '–õ–µ–≥–∫–æ—Å—Ç—å', '–ò–º–º—É–Ω–∏—Ç–µ—Ç', '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ'],
      difficulty: '–°—Ä–µ–¥–Ω–∏–π',
      thumbnail: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      aiPersonalized: true,
      matchScore: 89
    },
    {
      id: '3',
      name: '–ê–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏',
      description: '–ü–∏—Ç–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      calories_per_day: 2200,
      duration_days: 21,
      meals_per_day: 4,
      dietary_restrictions: ['–í—ã—Å–æ–∫–æ–±–µ–ª–∫–æ–≤—ã–π'],
      benefits: ['–≠–Ω–µ—Ä–≥–∏—è', '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å'],
      difficulty: '–õ–µ–≥–∫–∏–π',
      thumbnail: 'https://images.unsplash.com/photo-1511690743698-d9d85f2fbf38?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      price: 3200,
      matchScore: 72
    }
  ];

  const featuredRecipes: Recipe[] = [
    {
      id: '1',
      name: '–ë–æ—É–ª —Å –∫–∏–Ω–æ–∞ –¥–ª—è —Ñ–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–æ–π —Ñ–∞–∑—ã',
      description: '–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –±–µ–ª–∫–∞ –¥–ª—è —Ä–æ—Å—Ç–∞ —ç–Ω–µ—Ä–≥–∏–∏',
      prep_time: 15,
      cook_time: 0,
      calories: 420,
      servings: 1,
      difficulty: '–õ–µ–≥–∫–∏–π',
      dietary_tags: ['–í–µ–≥–∞–Ω', '–ë–µ–∑ –≥–ª—é—Ç–µ–Ω–∞', '–°—É–ø–µ—Ä—Ñ—É–¥—ã'],
      ingredients_count: 8,
      thumbnail: 'https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      health_score: 95,
      cyclePhase: 'follicular'
    },
    {
      id: '2',
      name: '–õ–æ—Å–æ—Å—å —Å –º–∞–≥–Ω–∏–µ–º (–ª—é—Ç–µ–∏–Ω–æ–≤–∞—è —Ñ–∞–∑–∞)',
      description: '–ü—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ —Å –º–∞–≥–Ω–∏–µ–º –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –ü–ú–°',
      prep_time: 10,
      cook_time: 20,
      calories: 380,
      servings: 2,
      difficulty: '–°—Ä–µ–¥–Ω–∏–π',
      dietary_tags: ['–ö–µ—Ç–æ', '–ü–∞–ª–µ–æ', '–û–º–µ–≥–∞-3', '–ú–∞–≥–Ω–∏–π'],
      ingredients_count: 6,
      thumbnail: 'https://images.unsplash.com/photo-1467003909585-2f8a72700288?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      health_score: 88,
      cyclePhase: 'luteal'
    },
    {
      id: '3',
      name: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–π —Å–º—É–∑–∏ —Å –∂–µ–ª–µ–∑–æ–º',
      description: '–ù–∞–ø–∏—Ç–æ–∫ –¥–ª—è –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–π —Ñ–∞–∑—ã —Å –≤—ã—Å–æ–∫–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –∂–µ–ª–µ–∑–∞',
      prep_time: 5,
      cook_time: 0,
      calories: 280,
      servings: 1,
      difficulty: '–õ–µ–≥–∫–∏–π',
      dietary_tags: ['–ñ–µ–ª–µ–∑–æ', '–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã', '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ'],
      ingredients_count: 5,
      thumbnail: 'https://images.unsplash.com/photo-1553530979-909c6cedcc77?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80',
      health_score: 82,
      cyclePhase: 'menstrual'
    }
  ];

  const GoalCard = ({ goal }: { goal: NutritionGoal }) => {
    const percentage = Math.min((goal.current / goal.target) * 100, 100);
    
    return (
      <Card className="prevent-card">
        <CardContent className="p-4">
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <h4 className="font-medium text-sm">{goal.name}</h4>
              <Badge variant="outline" className="text-xs">
                {goal.current}/{goal.target} {goal.unit}
              </Badge>
            </div>
            <Progress 
              value={percentage} 
              className="h-2" 
            />
            <div className="text-xs text-gray-500">
              {percentage.toFixed(0)}% –æ—Ç —Ü–µ–ª–∏
            </div>
          </div>
        </CardContent>
      </Card>
    );
  };

  // Handler for meal plan selection
  const handleSelectMealPlan = (plan: MealPlan) => {
    toast.success(`–ü–ª–∞–Ω "${plan.name}" –≤—ã–±—Ä–∞–Ω!`, {
      description: `–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ ${plan.duration_days} –¥–Ω–µ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–µ—Ä–≤—ã–º –º–µ–Ω—é.`
    });
  };

  // Handler for recipe opening
  const handleOpenRecipe = (recipe: Recipe) => {
    setSelectedRecipe(recipe);
  };

  // Handler for quick input buttons
  const handlePhotoFood = () => {
    toast.success("–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏—è –µ–¥—ã –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!");
  };

  const handleAddProduct = () => {
    toast.info("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞...");
  };

  const handleLogWater = () => {
    toast.success("–°—Ç–∞–∫–∞–Ω –≤–æ–¥—ã –∑–∞–ø–∏—Å–∞–Ω! üíß");
  };

  return (
    <div className="space-y-6">
      <Card className="prevent-card">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 font-montserrat">
            <Apple className="w-5 h-5 text-primary" />
            <span>–£–º–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Å –ò–ò</span>
          </CardTitle>
          <CardDescription className="font-roboto">
            –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –ø–æ–¥ –≤–∞—à —Ü–∏–∫–ª –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex space-x-1 mb-6 bg-gray-100 dark:bg-gray-800 p-1 rounded-lg">
            <Button
              variant={activeTab === 'today' ? 'default' : 'ghost'}
              onClick={() => setActiveTab('today')}
              className="flex-1"
            >
              <Target className="w-4 h-4 mr-2" />
              –°–µ–≥–æ–¥–Ω—è
            </Button>
            <Button
              variant={activeTab === 'plans' ? 'default' : 'ghost'}
              onClick={() => setActiveTab('plans')}
              className="flex-1"
            >
              <ChefHat className="w-4 h-4 mr-2" />
              –ò–ò-–ü–ª–∞–Ω—ã
            </Button>
            <Button
              variant={activeTab === 'recipes' ? 'default' : 'ghost'}
              onClick={() => setActiveTab('recipes')}
              className="flex-1"
            >
              <BookOpen className="w-4 h-4 mr-2" />
              –†–µ—Ü–µ–ø—Ç—ã
            </Button>
          </div>

          {activeTab === 'today' && (
            <div className="space-y-6">
              <div>
                <h3 className="text-lg font-montserrat font-semibold mb-4">
                  –í–∞—à–∏ —Ü–µ–ª–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                </h3>
                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
                  {dailyGoals.map((goal, index) => (
                    <GoalCard key={index} goal={goal} />
                  ))}
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-6">
                <Card className="prevent-card">
                  <CardHeader>
                    <CardTitle className="flex items-center space-x-2">
                      <Camera className="w-5 h-5" />
                      <span>–ë—ã—Å—Ç—Ä—ã–π –≤–≤–æ–¥</span>
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <Button 
                      className="w-full" 
                      variant="outline"
                      onClick={handlePhotoFood}
                    >
                      <Camera className="w-4 h-4 mr-2" />
                      –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –µ–¥—É
                    </Button>
                    <Button 
                      className="w-full" 
                      variant="outline"
                      onClick={handleAddProduct}
                    >
                      <Plus className="w-4 h-4 mr-2" />
                      –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
                    </Button>
                    <Button 
                      className="w-full" 
                      variant="outline"
                      onClick={handleLogWater}
                    >
                      <Droplets className="w-4 h-4 mr-2" />
                      –ó–∞–ø–∏—Å–∞—Ç—å –≤–æ–¥—É
                    </Button>
                  </CardContent>
                </Card>

                <Card className="prevent-card">
                  <CardHeader>
                    <CardTitle className="flex items-center space-x-2">
                      <TrendingUp className="w-5 h-5" />
                      <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª–∏</span>
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="flex justify-between items-center">
                        <span className="text-sm">–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ü–µ–ª–µ–π</span>
                        <span className="font-medium">78%</span>
                      </div>
                      <Progress value={78} className="h-2" />
                      <div className="text-xs text-gray-500">
                        5 –∏–∑ 7 –¥–Ω–µ–π —Ü–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          )}

          {activeTab === 'plans' && (
            <div>
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-montserrat font-semibold">
                  –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
                </h3>
                <Badge variant="secondary" className="bg-purple-100 text-purple-800">
                  <Zap className="w-3 h-3 mr-1" />
                  –£–ª—É—á—à–µ–Ω–æ –ò–ò
                </Badge>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {mealPlans.map(plan => (
                  <MealPlanCard key={plan.id} plan={plan} />
                ))}
              </div>
            </div>
          )}

          {activeTab === 'recipes' && (
            <div>
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-montserrat font-semibold">
                  –†–µ—Ü–µ–ø—Ç—ã –ø–æ–¥ –≤–∞—à —Ü–∏–∫–ª
                </h3>
                <Badge variant="secondary" className="bg-pink-100 text-pink-800">
                  –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥ —Ñ–∞–∑—É —Ü–∏–∫–ª–∞
                </Badge>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {featuredRecipes.map(recipe => (
                  <RecipeCard key={recipe.id} recipe={recipe} />
                ))}
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Recipe Modal */}
      <RecipeModal
        recipe={selectedRecipe}
        isOpen={!!selectedRecipe}
        onClose={() => setSelectedRecipe(null)}
      />
    </div>
  );
};

export default NutritionIntegration;
