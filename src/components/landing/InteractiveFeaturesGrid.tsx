
import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { 
  Calendar, 
  Heart, 
  Baby, 
  Flower2, 
  ArrowRight,
  Activity,
  CheckCircle
} from "lucide-react";
import { useAuth } from '@/contexts/AuthContext';
import { useNavigationHelper } from './shared/NavigationHelper';

const InteractiveFeaturesGrid = () => {
  const { user } = useAuth();
  const { handleButtonClick } = useNavigationHelper();

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–ª–∏–∫–æ–≤
  const debugButtonClick = (buttonName: string, targetPath: string, authRequired: boolean = false) => {
    return () => {
      console.log(`üî• –ö–Ω–æ–ø–∫–∞ "${buttonName}" –Ω–∞–∂–∞—Ç–∞`);
      console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: ${targetPath}`);
      console.log(`üîí –¢—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${authRequired}`);
      
      if (authRequired && !user) {
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞');
        handleButtonClick(buttonName, '/auth')();
      } else {
        handleButtonClick(buttonName, targetPath)();
      }
    };
  };

  const features = [
    {
      title: "–¶–∏–∫–ª –∏ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç—å",
      description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏",
      icon: Calendar,
      color: "from-blue-500 to-cyan-600",
      bgColor: "bg-gradient-to-br from-blue-50 to-cyan-50",
      borderColor: "border-blue-200",
      buttonText: "–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å",
      buttonColor: "bg-blue-500 hover:bg-blue-600",
      targetPath: "/menstrual-cycle-tracker",
      authRequired: true,
      benefits: ["–¢–æ—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Ü–∏–∫–ª–∞", "–ü—Ä–æ–≥–Ω–æ–∑ –æ–≤—É–ª—è—Ü–∏–∏", "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏"]
    },
    {
      title: "–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å",
      description: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
      icon: Activity,
      color: "from-purple-500 to-indigo-600",
      bgColor: "bg-gradient-to-br from-purple-50 to-indigo-50",
      borderColor: "border-purple-200",
      buttonText: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å",
      buttonColor: "bg-purple-500 hover:bg-purple-600",
      targetPath: "/hormonal-health-demo",
      authRequired: false,
      benefits: ["–ê–Ω–∞–ª–∏–∑ –≥–æ—Ä–º–æ–Ω–æ–≤", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"]
    },
    {
      title: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏",
      description: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞—á–∞—Ç–∏—é –∏ –∑–¥–æ—Ä–æ–≤–∞—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
      icon: Baby,
      color: "from-pink-500 to-rose-600",
      bgColor: "bg-gradient-to-br from-pink-50 to-rose-50",
      borderColor: "border-pink-200",
      buttonText: "–ù–∞—á–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      buttonColor: "bg-pink-500 hover:bg-pink-600",
      targetPath: "/pregnancy-planning",
      authRequired: true,
      benefits: ["–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞—á–∞—Ç–∏—é", "–í–∏—Ç–∞–º–∏–Ω—ã –∏ –ø–∏—Ç–∞–Ω–∏–µ", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"]
    },
    {
      title: "–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–Ω–æ–ø–∞—É–∑—ã",
      description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±–ª–µ–≥—á–µ–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–æ–≤ –≤ –ø–µ—Ä–µ—Ö–æ–¥–Ω—ã–π –ø–µ—Ä–∏–æ–¥",
      icon: Flower2,
      color: "from-orange-500 to-amber-600",
      bgColor: "bg-gradient-to-br from-orange-50 to-amber-50",
      borderColor: "border-orange-200",
      buttonText: "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É",
      buttonColor: "bg-orange-500 hover:bg-orange-600",
      targetPath: "/menopause-demo",
      authRequired: false,
      benefits: ["–û–±–ª–µ–≥—á–µ–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–æ–≤", "–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è", "–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –∏ –ø–∏—Ç–∞–Ω–∏–µ"]
    }
  ];

  const generalBenefits = [
    "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π",
    "–ü–ª–∞–Ω –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –Ω–∞ –≥–æ–¥",
    "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏",
    "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä–∞—Ö",
    "–°–≤—è–∑—å —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –≤—Ä–∞—á–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
  ];

  return (
    <section className="py-12 sm:py-16 lg:py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-gray-50 to-white">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12 sm:mb-16">
          <Badge className="bg-purple-100 text-purple-800 mb-4 sm:mb-6 text-xs sm:text-sm">
            üå∏ –ñ–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ
          </Badge>
          <h2 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-4 sm:mb-6">
            –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–±–æ—Ç–∞ –æ –∑–¥–æ—Ä–æ–≤—å–µ
          </h2>
          <p className="text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
          </p>
        </div>

        {/* Features Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8 mb-12 sm:mb-16">
          {features.map((feature, index) => {
            const IconComponent = feature.icon;
            return (
              <Card 
                key={index} 
                className={`${feature.bgColor} ${feature.borderColor} hover:shadow-xl transition-all duration-300 hover:scale-[1.02] group w-full`}
              >
                <CardHeader className="pb-4">
                  <div className="flex items-start space-x-4">
                    <div className={`p-2 sm:p-3 rounded-full bg-gradient-to-r ${feature.color} relative group-hover:scale-110 transition-transform duration-200 flex-shrink-0`}>
                      <IconComponent className="w-5 h-5 sm:w-6 sm:h-6 text-white" aria-hidden="true" />
                    </div>
                    <div className="flex-1 min-w-0">
                      <CardTitle className="text-lg sm:text-xl font-bold text-gray-900 mb-2 break-words">
                        {feature.title}
                      </CardTitle>
                      <CardDescription className="text-gray-700 text-sm sm:text-base leading-relaxed break-words">
                        {feature.description}
                      </CardDescription>
                    </div>
                  </div>
                </CardHeader>
                
                <CardContent className="pt-4">
                  <div className="space-y-3 mb-6">
                    <h4 className="font-semibold text-gray-900 text-sm">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
                    {feature.benefits.map((benefit, benefitIndex) => (
                      <div key={benefitIndex} className="flex items-start space-x-2">
                        <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-green-600 flex-shrink-0 mt-0.5" aria-hidden="true" />
                        <span className="text-xs sm:text-sm text-gray-700 font-medium leading-relaxed break-words">{benefit}</span>
                      </div>
                    ))}
                  </div>
                  
                  <div className="space-y-3">
                    <Button 
                      className={`w-full ${feature.buttonColor} text-white font-semibold transition-all duration-200 hover:shadow-lg hover:scale-105 text-sm`}
                      onClick={debugButtonClick(feature.buttonText, feature.targetPath, feature.authRequired)}
                      aria-label={`${feature.buttonText} - ${feature.title}`}
                    >
                      {feature.buttonText}
                      <ArrowRight className="w-3 h-3 sm:w-4 sm:h-4 ml-2" aria-hidden="true" />
                    </Button>
                    
                    {feature.authRequired && !user && (
                      <p className="text-xs text-gray-600 text-center leading-relaxed">
                        üí° –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                      </p>
                    )}
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </div>

        {/* General Benefits */}
        <div className="text-center mb-8 sm:mb-12">
          <Badge className="bg-green-100 text-green-800 mb-4 sm:mb-6 text-xs sm:text-sm">
            ‚úÖ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ
          </Badge>
          <h3 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-6 sm:mb-8">
            –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –∑–∞–±–æ—Ç—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ
          </h3>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-12 sm:mb-16">
          {generalBenefits.map((benefit, index) => (
            <Card key={index} className="bg-white hover:shadow-md transition-shadow border-green-100 w-full">
              <CardContent className="p-4 sm:p-6">
                <div className="flex items-start space-x-3">
                  <CheckCircle className="w-5 h-5 sm:w-6 sm:h-6 text-green-600 flex-shrink-0 mt-1" />
                  <span className="text-gray-800 font-medium text-sm sm:text-base leading-relaxed break-words">{benefit}</span>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* CTA Section */}
        <div className="text-center">
          <Card className="bg-gradient-to-r from-purple-500 to-pink-500 text-white border-none shadow-2xl w-full">
            <CardContent className="py-8 sm:py-12 px-4 sm:px-6">
              <h3 className="text-xl sm:text-2xl font-bold mb-4">
                –ù–∞—á–Ω–∏—Ç–µ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ–≥–æ–¥–Ω—è
              </h3>
              <p className="text-base sm:text-lg mb-6 sm:mb-8 opacity-90 max-w-2xl mx-auto leading-relaxed">
                –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –∂–µ–Ω—â–∏–Ω, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —É–ø—Ä–∞–≤–ª—è—é—Ç —Å–≤–æ–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å –ø–æ–º–æ—â—å—é PREVENT
              </p>
              <Button 
                size="lg" 
                variant="secondary" 
                className="text-purple-600 hover:text-purple-700 font-semibold hover:scale-105 transition-all duration-200 text-sm sm:text-base"
                onClick={debugButtonClick('–ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', '/auth', false)}
                aria-label="–ù–∞—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–¥–æ—Ä–æ–≤—å—è"
              >
                {user ? "–ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" : "–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ"}
                <Heart className="w-4 h-4 sm:w-5 sm:h-5 ml-2" aria-hidden="true" />
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};

export default InteractiveFeaturesGrid;
