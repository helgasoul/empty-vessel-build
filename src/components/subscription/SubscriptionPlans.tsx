
import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { CheckCircle, Star, Crown, Zap } from "lucide-react";
import { toast } from "sonner";

interface PlanFeature {
  name: string;
  included: boolean;
}

interface SubscriptionPlan {
  id: string;
  name: string;
  price: number;
  currency: string;
  period: string;
  description: string;
  popular?: boolean;
  features: PlanFeature[];
  icon: React.ReactNode;
  color: string;
}

const SubscriptionPlans = () => {
  const plans: SubscriptionPlan[] = [
    {
      id: 'free',
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: 0,
      currency: '‚ÇΩ',
      period: '–Ω–∞–≤—Å–µ–≥–¥–∞',
      description: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–±–æ—Ç—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ',
      icon: <Star className="w-6 h-6" />,
      color: 'bg-gray-100',
      features: [
        { name: '–ë–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ (–¥–æ 3 –≤ –º–µ—Å—è—Ü)', included: true },
        { name: '–ü—Ä–æ—Å—Ç—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é', included: true },
        { name: '–¢—Ä–µ–∫–µ—Ä –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞', included: true },
        { name: '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö', included: true },
        { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º', included: true },
        { name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤', included: false },
        { name: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è', included: false },
        { name: '–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ñ–∏—Ç–Ω–µ—Å–∞', included: false },
        { name: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏', included: false },
        { name: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', included: false }
      ]
    },
    {
      id: 'premium',
      name: '–ü—Ä–µ–º–∏—É–º',
      price: 1990,
      currency: '‚ÇΩ',
      period: '–≤ –º–µ—Å—è—Ü',
      description: '–ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –∑–∞–±–æ—Ç—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ',
      popular: true,
      icon: <Crown className="w-6 h-6" />,
      color: 'bg-primary/10',
      features: [
        { name: '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–æ–≤', included: true },
        { name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã', included: true },
        { name: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è', included: true },
        { name: '–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ñ–∏—Ç–Ω–µ—Å–∞ –∏ –π–æ–≥–∏', included: true },
        { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–æ –≤—Å–µ–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏', included: true },
        { name: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏', included: true },
        { name: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —ç–∫—Å–ø–æ—Ä—Ç', included: true },
        { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π', included: true },
        { name: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', included: true },
        { name: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', included: true }
      ]
    }
  ];

  const handleSubscribe = async (planId: string) => {
    if (planId === 'free') {
      toast.success('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –±–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω!');
      return;
    }

    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Stripe checkout session
      toast.info('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã...');
      
      // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ - –ø–æ–∑–∂–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º Stripe
      setTimeout(() => {
        toast.success('–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!');
      }, 2000);
    } catch (error) {
      console.error('Payment error:', error);
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
    }
  };

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-3xl font-montserrat font-bold text-gray-900 dark:text-white mb-4">
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏
        </h2>
        <p className="text-lg text-gray-600 dark:text-gray-300 font-roboto">
          –ù–∞—á–Ω–∏—Ç–µ —Å –±–∞–∑–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º
        </p>
      </div>

      <div className="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
        {plans.map((plan) => (
          <Card key={plan.id} className={`relative ${plan.color} border-2 ${plan.popular ? 'border-primary shadow-lg' : 'border-gray-200'}`}>
            {plan.popular && (
              <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                <Badge className="bg-primary text-white px-4 py-1">
                  <Zap className="w-3 h-3 mr-1" />
                  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                </Badge>
              </div>
            )}
            
            <CardHeader className="text-center">
              <div className={`w-12 h-12 mx-auto mb-3 rounded-full flex items-center justify-center ${plan.popular ? 'bg-primary text-white' : 'bg-gray-200 text-gray-600'}`}>
                {plan.icon}
              </div>
              <CardTitle className="text-2xl font-montserrat">{plan.name}</CardTitle>
              <div className="text-3xl font-bold text-primary">
                {plan.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${plan.price} ${plan.currency}`}
                <span className="text-sm font-normal text-gray-600">/{plan.period}</span>
              </div>
              <CardDescription className="text-center">
                {plan.description}
              </CardDescription>
            </CardHeader>

            <CardContent className="space-y-4">
              <div className="space-y-3">
                {plan.features.map((feature, index) => (
                  <div key={index} className="flex items-center space-x-3">
                    <CheckCircle 
                      className={`w-4 h-4 ${feature.included ? 'text-green-500' : 'text-gray-300'}`}
                    />
                    <span className={`text-sm ${feature.included ? 'text-gray-900 dark:text-white' : 'text-gray-400'}`}>
                      {feature.name}
                    </span>
                  </div>
                ))}
              </div>

              <Button 
                onClick={() => handleSubscribe(plan.id)}
                className={`w-full ${plan.popular ? 'bg-primary hover:bg-primary/90' : ''}`}
                variant={plan.popular ? 'default' : 'outline'}
              >
                {plan.price === 0 ? '–¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="text-center text-sm text-gray-500 max-w-2xl mx-auto">
        <p>
          üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Stripe ‚Ä¢ –û—Ç–º–µ–Ω–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç ‚Ä¢ 
          –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å GDPR –∏ HIPAA
        </p>
      </div>
    </div>
  );
};

export default SubscriptionPlans;
