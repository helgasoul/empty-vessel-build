
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { 
  Thermometer, 
  Moon, 
  Brain, 
  Smile, 
  Calendar, 
  Heart,
  TrendingUp,
  Star,
  CheckCircle,
  BookOpen,
  Video,
  MessageCircle,
  Stethoscope,
  Shield,
  Award,
  Eye,
  Coffee
} from "lucide-react";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts';

interface MenopauseSectionProps {
  onConsultationClick?: () => void;
  onSpecialistClick?: () => void;
}

const MenopauseSection = ({ onConsultationClick, onSpecialistClick }: MenopauseSectionProps) => {
  const [selectedPeriod, setSelectedPeriod] = useState('week');

  // –î–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º–æ–≤
  const symptoms = [
    { 
      name: '–ü—Ä–∏–ª–∏–≤—ã', 
      icon: Thermometer, 
      intensity: 3, 
      frequency: 4, 
      color: '#D2691E',
      description: '–ß–∞—Å—Ç–æ—Ç–∞ –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–∏–≤–æ–≤'
    },
    { 
      name: '–°–æ–Ω', 
      icon: Moon, 
      intensity: 2, 
      frequency: 5, 
      color: '#8B4F99',
      description: '–ö–∞—á–µ—Å—Ç–≤–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∞'
    },
    { 
      name: '–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è', 
      icon: Brain, 
      intensity: 4, 
      frequency: 3, 
      color: '#CD853F',
      description: '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø–∞–º—è—Ç—å'
    },
    { 
      name: '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', 
      icon: Smile, 
      intensity: 3, 
      frequency: 4, 
      color: '#BC8F8F',
      description: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ'
    }
  ];

  // –î–∞–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤
  const symptomsData = [
    { day: '–ü–Ω', hot_flashes: 3, sleep: 2, mood: 4, concentration: 3 },
    { day: '–í—Ç', hot_flashes: 4, sleep: 3, mood: 3, concentration: 4 },
    { day: '–°—Ä', hot_flashes: 2, sleep: 2, mood: 5, concentration: 2 },
    { day: '–ß—Ç', hot_flashes: 5, sleep: 4, mood: 2, concentration: 5 },
    { day: '–ü—Ç', hot_flashes: 3, sleep: 3, mood: 4, concentration: 3 },
    { day: '–°–±', hot_flashes: 2, sleep: 2, mood: 5, concentration: 2 },
    { day: '–í—Å', hot_flashes: 3, sleep: 3, mood: 4, concentration: 3 }
  ];

  // –ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
  const supportPrograms = [
    {
      category: '–ü–∏—Ç–∞–Ω–∏–µ',
      title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—Å—Ç–Ω–æ–π —Ç–∫–∞–Ω–∏',
      description: '–ö–∞–ª—å—Ü–∏–π, –≤–∏—Ç–∞–º–∏–Ω D –∏ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∫–æ—Å—Ç–µ–π',
      progress: 75,
      color: '#D2691E',
      isFavorite: true
    },
    {
      category: '–î–æ–±–∞–≤–∫–∏',
      title: '–§–∏—Ç–æ—ç—Å—Ç—Ä–æ–≥–µ–Ω—ã –∏ –º–∞–≥–Ω–∏–π',
      description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
      progress: 60,
      color: '#8B4F99',
      isFavorite: false
    },
    {
      category: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      title: '–ô–æ–≥–∞ –∏ —Å—É—Å—Ç–∞–≤–Ω–∞—è –≥–∏–º–Ω–∞—Å—Ç–∏–∫–∞',
      description: '–ú—è–≥–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≥–∏–±–∫–æ—Å—Ç–∏',
      progress: 85,
      color: '#CD853F',
      isFavorite: true
    },
    {
      category: '–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
      title: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏',
      description: '–¢–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–æ–º',
      progress: 45,
      color: '#BC8F8F',
      isFavorite: false
    }
  ];

  // –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  const educationalContent = [
    {
      title: '–ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ–Ω–æ–ø–∞—É–∑–∞ –∏ –∫–∞–∫ –∫ –Ω–µ–π –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è',
      type: 'article',
      badge: 'üîç –ù–∞—É—á–Ω–æ',
      duration: '15 –º–∏–Ω',
      isPopular: true
    },
    {
      title: '–ú–∏—Ñ—ã –æ –ó–ì–¢: —Ä–∞–∑–±–∏—Ä–∞–µ–º —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º',
      type: 'video',
      badge: 'üí¨ –û–ø—ã—Ç –≤—Ä–∞—á–∞',
      duration: '25 –º–∏–Ω',
      isPopular: true
    },
    {
      title: '–ü–∏—Ç–∞–Ω–∏–µ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∫–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ 45',
      type: 'webinar',
      badge: 'üìΩ –í–∏–¥–µ–æ',
      duration: '40 –º–∏–Ω',
      isPopular: false
    },
    {
      title: '–°–µ–∫—Å –∏ –ª–∏–±–∏–¥–æ –≤ –ø–µ—Ä–∏–æ–¥ –º–µ–Ω–æ–ø–∞—É–∑—ã',
      type: 'podcast',
      badge: 'üí¨ –û–ø—ã—Ç –≤—Ä–∞—á–∞',
      duration: '30 –º–∏–Ω',
      isPopular: true
    }
  ];

  // –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
  const specialists = [
    {
      name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
      specialty: '–ì–∏–Ω–µ–∫–æ–ª–æ–≥-—ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥',
      experience: '15 –ª–µ—Ç',
      rating: 4.9,
      topics: ['–ó–ì–¢', '–ø—Ä–∏–ª–∏–≤—ã', '–º–µ—Ç–∞–±–æ–ª–∏–∑–º'],
      available: '–ó–∞–≤—Ç—Ä–∞, 14:00'
    },
    {
      name: '–ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
      specialty: '–ü—Å–∏—Ö–æ–ª–æ–≥',
      experience: '12 –ª–µ—Ç',
      rating: 4.8,
      topics: ['–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '—Å—Ç—Ä–µ—Å—Å', '—Å–æ–Ω'],
      available: '–°–µ–≥–æ–¥–Ω—è, 18:30'
    }
  ];

  const getIntensityColor = (intensity: number) => {
    if (intensity <= 2) return '#7BC4A4';
    if (intensity <= 3) return '#E8B87A';
    return '#E8A07A';
  };

  return (
    <div className="max-w-6xl mx-auto p-6 space-y-8 bg-gradient-to-br from-orange-50 via-rose-50 to-amber-50 min-h-screen">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ */}
      <div className="text-center mb-8">
        <h2 className="text-3xl font-semibold text-amber-800 mb-4">
          –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –ø–µ—Ä–∏–æ–¥ –º–µ–Ω–æ–ø–∞—É–∑—ã
        </h2>
        <p className="text-lg text-amber-700 max-w-2xl mx-auto leading-relaxed">
          –¢–µ–ø–ª–æ–µ –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤–∞–∂–Ω–æ–º —ç—Ç–∞–ø–µ –∂–∏–∑–Ω–∏. –ë–µ–∑ —Å—Ç—ã–¥–∞, –±–µ–∑ –¥–∞–≤–ª–µ–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –∑–∞–±–æ—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
        </p>
      </div>

      <Tabs defaultValue="monitoring" className="w-full">
        <TabsList className="grid w-full grid-cols-4 mb-8 bg-amber-100">
          <TabsTrigger value="monitoring" className="flex items-center gap-2 data-[state=active]:bg-amber-200">
            <Calendar className="w-4 h-4" />
            –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
          </TabsTrigger>
          <TabsTrigger value="support" className="flex items-center gap-2 data-[state=active]:bg-amber-200">
            <Heart className="w-4 h-4" />
            –ü–æ–¥–¥–µ—Ä–∂–∫–∞
          </TabsTrigger>
          <TabsTrigger value="education" className="flex items-center gap-2 data-[state=active]:bg-amber-200">
            <BookOpen className="w-4 h-4" />
            –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
          </TabsTrigger>
          <TabsTrigger value="specialists" className="flex items-center gap-2 data-[state=active]:bg-amber-200">
            <Stethoscope className="w-4 h-4" />
            –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
          </TabsTrigger>
        </TabsList>

        {/* –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏–º–ø—Ç–æ–º–æ–≤ */}
        <TabsContent value="monitoring" className="space-y-6">
          {/* –§–∏–ª—å—Ç—Ä –ø–æ –ø–µ—Ä–∏–æ–¥—É */}
          <div className="flex gap-2 mb-6">
            {['day', 'week', 'month'].map((period) => (
              <Button
                key={period}
                variant={selectedPeriod === period ? "default" : "outline"}
                size="sm"
                onClick={() => setSelectedPeriod(period)}
                className={selectedPeriod === period ? "bg-amber-600 hover:bg-amber-700" : "border-amber-300 text-amber-700"}
              >
                {period === 'day' ? '–î–µ–Ω—å' : period === 'week' ? '–ù–µ–¥–µ–ª—è' : '–ú–µ—Å—è—Ü'}
              </Button>
            ))}
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤ */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            {symptoms.map((symptom, index) => {
              const IconComponent = symptom.icon;
              return (
                <Card key={index} className="border-2 hover:shadow-lg transition-shadow" style={{ borderColor: `${symptom.color}40` }}>
                  <CardHeader className="pb-3">
                    <div className="flex items-center justify-between">
                      <div 
                        className="p-3 rounded-full"
                        style={{ backgroundColor: `${symptom.color}20` }}
                      >
                        <IconComponent className="w-6 h-6" style={{ color: symptom.color }} />
                      </div>
                      <Badge 
                        variant="secondary" 
                        style={{ backgroundColor: getIntensityColor(symptom.intensity), color: 'white' }}
                      >
                        {symptom.intensity}/5
                      </Badge>
                    </div>
                    <CardTitle className="text-lg" style={{ color: symptom.color }}>
                      {symptom.name}
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <p className="text-sm text-gray-600">{symptom.description}</p>
                      
                      <div className="space-y-2">
                        <div className="flex justify-between text-sm">
                          <span className="text-gray-600">–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å</span>
                          <span className="font-medium">{symptom.intensity}/5</span>
                        </div>
                        <Progress 
                          value={symptom.intensity * 20} 
                          className="h-2"
                          style={{ 
                            backgroundColor: `${symptom.color}20`
                          }}
                        />
                      </div>
                      
                      <div className="space-y-2">
                        <div className="flex justify-between text-sm">
                          <span className="text-gray-600">–ß–∞—Å—Ç–æ—Ç–∞</span>
                          <span className="font-medium">{symptom.frequency} —Ä–∞–∑</span>
                        </div>
                        <Progress 
                          value={symptom.frequency * 20} 
                          className="h-2"
                          style={{ 
                            backgroundColor: `${symptom.color}20`
                          }}
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>

          {/* –ì—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-amber-800">
                <TrendingUp className="w-5 h-5" />
                –î–∏–Ω–∞–º–∏–∫–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é
              </CardTitle>
              <CardDescription>
                –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="h-80">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart data={symptomsData}>
                    <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                    <XAxis dataKey="day" tick={{ fontSize: 12 }} />
                    <YAxis domain={[0, 5]} tick={{ fontSize: 12 }} />
                    <Tooltip 
                      contentStyle={{ 
                        backgroundColor: 'white', 
                        border: '1px solid #e5e7eb',
                        borderRadius: '8px' 
                      }} 
                    />
                    <Line type="monotone" dataKey="hot_flashes" stroke="#D2691E" strokeWidth={2} name="–ü—Ä–∏–ª–∏–≤—ã" />
                    <Line type="monotone" dataKey="sleep" stroke="#8B4F99" strokeWidth={2} name="–°–æ–Ω" />
                    <Line type="monotone" dataKey="mood" stroke="#BC8F8F" strokeWidth={2} name="–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ" />
                    <Line type="monotone" dataKey="concentration" stroke="#CD853F" strokeWidth={2} name="–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è" />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </CardContent>
          </Card>

          {/* –ò–Ω—Å–∞–π—Ç –Ω–µ–¥–µ–ª–∏ */}
          <Card className="bg-gradient-to-r from-amber-50 to-orange-50 border-amber-200">
            <CardContent className="p-6">
              <div className="flex items-start gap-3">
                <Eye className="w-5 h-5 text-amber-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-amber-900 mb-1">–ò–Ω—Å–∞–π—Ç –Ω–µ–¥–µ–ª–∏</h4>
                  <p className="text-sm text-amber-800">
                    –ü—Ä–∏–ª–∏–≤—ã —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–µ–¥–µ–ª–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ 
                    –∏ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∫–æ—Ñ–µ–∏–Ω –≤ —ç—Ç–∏ –¥–Ω–∏.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
        <TabsContent value="support" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* –ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º */}
            <div className="space-y-4">
              {supportPrograms.map((program, index) => (
                <Card key={index} className="border-l-4 hover:shadow-lg transition-shadow" style={{ borderLeftColor: program.color }}>
                  <CardContent className="p-6">
                    <div className="space-y-4">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <Badge variant="secondary" style={{ backgroundColor: `${program.color}20`, color: program.color }}>
                              {program.category}
                            </Badge>
                            {program.isFavorite && <Star className="w-4 h-4 text-amber-500 fill-current" />}
                          </div>
                          <h3 className="font-semibold text-lg mb-1">{program.title}</h3>
                          <p className="text-gray-600 text-sm">{program.description}</p>
                        </div>
                      </div>
                      
                      <div className="space-y-2">
                        <div className="flex justify-between text-sm">
                          <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
                          <span className="font-medium">{program.progress}%</span>
                        </div>
                        <Progress value={program.progress} className="h-2" />
                      </div>

                      <div className="flex gap-2">
                        <Button size="sm" variant="outline" className="flex-1">
                          {program.isFavorite ? '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º' : '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                        </Button>
                        <Button size="sm" className="flex-1" style={{ backgroundColor: program.color }}>
                          –í—ã–ø–æ–ª–Ω–µ–Ω–æ
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            {/* –ü–ª–∞–Ω —Ñ–æ–∫—É—Å–∞ –Ω–µ–¥–µ–ª–∏ */}
            <div className="space-y-6">
              <Card className="bg-gradient-to-br from-amber-100 to-orange-100 border-amber-200">
                <CardHeader>
                  <div className="flex items-center gap-2">
                    <Coffee className="w-5 h-5 text-amber-700" />
                    <CardTitle className="text-amber-800">–ü–ª–∞–Ω-—Ñ–æ–∫—É—Å: "–ù–µ–¥–µ–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–Ω–∞"</CardTitle>
                  </div>
                  <CardDescription className="text-amber-700">
                    –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–Ω–∞ –≤ –ø–µ—Ä–∏–æ–¥ –º–µ–Ω–æ–ø–∞—É–∑—ã
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="p-4 bg-green-50 rounded-lg border border-green-200">
                    <div className="flex items-center gap-2 mb-2">
                      <CheckCircle className="w-4 h-4 text-green-600" />
                      <span className="font-medium text-green-800">–í—ã–ø–æ–ª–Ω–µ–Ω–æ: 5 –∏–∑ 7 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</span>
                    </div>
                    <p className="text-sm text-green-700">
                      –û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–ª–µ–¥–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º—É —Å–Ω–∞.
                    </p>
                  </div>

                  <div className="space-y-3">
                    <h4 className="font-medium text-amber-800">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:</h4>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-amber-500 rounded-full"></div>
                        –ú–∞–≥–Ω–∏–π –∑–∞ 2 —á–∞—Å–∞ –¥–æ —Å–Ω–∞
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-amber-500 rounded-full"></div>
                        –ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è —Å–ø–∞–ª—å–Ω—è (18-20¬∞C)
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-amber-500 rounded-full"></div>
                        –î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ 4-7-8
                      </li>
                    </ul>
                  </div>

                  <Button className="w-full bg-amber-600 hover:bg-amber-700">
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É
                  </Button>
                </CardContent>
              </Card>

              {/* –ú–æ—Ç–∏–≤–∞—Ü–∏—è */}
              <Card className="border-2 border-orange-200">
                <CardContent className="p-6 text-center">
                  <div className="flex items-center justify-center gap-2 mb-4">
                    <Award className="w-6 h-6 text-orange-600" />
                    <span className="font-semibold text-orange-800">3 –Ω–µ–¥–µ–ª–∏ —Å –∑–∞–±–æ—Ç–æ–π –æ —Å–µ–±–µ</span>
                  </div>
                  <p className="text-sm text-orange-700 mb-4">
                    –í—ã –∑–∞–±–æ—Ç–∏—Ç–µ—Å—å –æ —Å–µ–±–µ —É–∂–µ 21 –¥–µ–Ω—å –ø–æ–¥—Ä—è–¥! –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
                  </p>
                  <div className="flex items-center justify-center gap-1">
                    {[...Array(7)].map((_, i) => (
                      <div key={i} className={`w-3 h-3 rounded-full ${i < 5 ? 'bg-orange-400' : 'bg-orange-200'}`} />
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </TabsContent>

        {/* –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ */}
        <TabsContent value="education" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {educationalContent.map((content, index) => (
              <Card key={index} className="hover:shadow-lg transition-shadow border-2 border-orange-100">
                <CardHeader>
                  <div className="flex items-start justify-between mb-2">
                    <div className="flex items-center gap-2">
                      {content.type === 'video' && <Video className="w-4 h-4 text-orange-600" />}
                      {content.type === 'article' && <BookOpen className="w-4 h-4 text-orange-600" />}
                      {content.type === 'webinar' && <Video className="w-4 h-4 text-orange-600" />}
                      {content.type === 'podcast' && <MessageCircle className="w-4 h-4 text-orange-600" />}
                      <Badge variant="secondary" className="text-xs">
                        {content.badge}
                      </Badge>
                    </div>
                    {content.isPopular && (
                      <Badge className="bg-orange-500 text-white">
                        –ü–æ–ø—É–ª—è—Ä–Ω–æ
                      </Badge>
                    )}
                  </div>
                  <CardTitle className="text-lg text-orange-800 leading-tight">
                    {content.title}
                  </CardTitle>
                  <CardDescription className="text-orange-600">
                    {content.duration}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2">
                    <Button variant="outline" size="sm" className="flex-1 border-orange-300 text-orange-700">
                      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </Button>
                    <Button size="sm" className="flex-1 bg-orange-600 hover:bg-orange-700">
                      –ß–∏—Ç–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>

          <Card className="bg-gradient-to-r from-orange-50 to-amber-50 border-orange-200">
            <CardContent className="p-6 text-center">
              <h3 className="text-lg font-semibold text-orange-800 mb-2">
                –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞
              </h3>
              <p className="text-orange-700 mb-4">
                –ü–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –≤–∏–¥–µ–æ –Ω–∞ email –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
              </p>
              <Button className="bg-orange-600 hover:bg-orange-700">
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        {/* –ó–∞–ø–∏—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É */}
        <TabsContent value="specialists" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {specialists.map((specialist, index) => (
              <Card key={index} className="border-2 border-amber-200 hover:shadow-lg transition-shadow">
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div>
                      <CardTitle className="text-lg text-amber-800">{specialist.name}</CardTitle>
                      <CardDescription className="text-amber-700">
                        {specialist.specialty} ‚Ä¢ {specialist.experience}
                      </CardDescription>
                    </div>
                    <div className="flex items-center gap-1">
                      <Star className="w-4 h-4 text-yellow-500 fill-current" />
                      <span className="text-sm font-medium">{specialist.rating}</span>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div>
                    <h4 className="text-sm font-medium text-amber-800 mb-2">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</h4>
                    <div className="flex flex-wrap gap-1">
                      {specialist.topics.map((topic, topicIndex) => (
                        <Badge key={topicIndex} variant="secondary" className="bg-amber-100 text-amber-800">
                          {topic}
                        </Badge>
                      ))}
                    </div>
                  </div>

                  <div className="p-3 bg-green-50 rounded-lg border border-green-200">
                    <div className="text-sm text-green-800">
                      <strong>–ë–ª–∏–∂–∞–π—à–∏–π —Å–ª–æ—Ç:</strong>
                      <br />
                      {specialist.available}
                    </div>
                  </div>

                  <div className="grid grid-cols-2 gap-2">
                    <Button variant="outline" size="sm" className="border-amber-300 text-amber-700">
                      <MessageCircle className="w-4 h-4 mr-1" />
                      –ß–∞—Ç
                    </Button>
                    <Button size="sm" className="bg-amber-600 hover:bg-amber-700">
                      <Video className="w-4 h-4 mr-1" />
                      –í–∏–¥–µ–æ
                    </Button>
                  </div>

                  <Button 
                    className="w-full bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700"
                    onClick={onSpecialistClick}
                  >
                    –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å */}
          <Card className="bg-gradient-to-r from-amber-100 to-orange-100 border-amber-200">
            <CardHeader>
              <CardTitle className="text-amber-800">–ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å</CardTitle>
              <CardDescription className="text-amber-700">
                –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                {['–ù–∞—á–∞—Ç—å –ó–ì–¢', '–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º', '–ü—Ä–∏–ª–∏–≤—ã', '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ'].map((topic, index) => (
                  <Button
                    key={index}
                    variant="outline"
                    className="h-16 flex-col border-amber-300 text-amber-700 hover:bg-amber-50"
                    onClick={onConsultationClick}
                  >
                    <span className="text-sm text-center">{topic}</span>
                  </Button>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* –ë–ª–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      <Card className="bg-gradient-to-r from-amber-600 to-orange-600 text-white border-none">
        <CardContent className="p-6">
          <div className="text-center space-y-4">
            <div className="flex items-center justify-center gap-2 mb-4">
              <Shield className="w-6 h-6" />
              <span className="font-semibold text-lg">–í–∞—à –∫–æ–º—Ñ–æ—Ä—Ç ‚Äî –Ω–∞—à –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</span>
            </div>
            <p className="text-amber-100 text-sm max-w-2xl mx-auto leading-relaxed">
              –ú—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –º–µ–Ω–æ–ø–∞—É–∑–∞ ‚Äî —ç—Ç–æ –Ω–µ –±–æ–ª–µ–∑–Ω—å, –∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —ç—Ç–∞–ø –∂–∏–∑–Ω–∏. 
              –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–µ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è. 
              –ù–∏–∫–∞–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è, –Ω–∏–∫–∞–∫–æ–≥–æ —Å—Ç—ã–¥–∞ ‚Äî —Ç–æ–ª—å–∫–æ —Ç–µ–ø–ª–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å.
            </p>
            <div className="flex items-center justify-center gap-6 text-sm text-amber-100 mt-4">
              <span>üîí –ü–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</span>
              <span>‚ù§Ô∏è –≠–º–ø–∞—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥</span>
              <span>üì± –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</span>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default MenopauseSection;
