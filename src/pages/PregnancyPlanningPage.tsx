
import React, { useState, useEffect } from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { Navigate } from 'react-router-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Calendar } from '@/components/ui/calendar';
import { 
  Baby, 
  Heart, 
  Calendar as CalendarIcon,
  FileText,
  BookOpen,
  Video,
  CheckCircle,
  Clock,
  Upload,
  Stethoscope,
  Apple,
  Activity,
  Flower2,
  Shield
} from 'lucide-react';
import BackButton from '@/components/ui/back-button';
import { format, addDays, isSameDay } from 'date-fns';
import { ru } from 'date-fns/locale';

const PregnancyPlanningPage = () => {
  const { user, loading } = useAuth();
  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());
  const [planningStatus, setPlanningStatus] = useState<'preparing' | 'active' | 'consultation'>('active');

  if (loading) {
    return <div className="flex justify-center items-center min-h-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  if (!user) {
    return <Navigate to="/auth" replace />;
  }

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  const getFertilityInfo = (date: Date) => {
    const day = date.getDate();
    if (day >= 12 && day <= 16) return { type: 'fertile', label: '–§–µ—Ä—Ç–∏–ª—å–Ω—ã–µ –¥–Ω–∏' };
    if (day === 14) return { type: 'ovulation', label: '–û–≤—É–ª—è—Ü–∏—è' };
    if (day >= 10 && day <= 18) return { type: 'window', label: '–û–∫–Ω–æ –∑–∞—á–∞—Ç–∏—è' };
    return { type: 'normal', label: '–û–±—ã—á–Ω—ã–π –¥–µ–Ω—å' };
  };

  const requiredTests = [
    { id: 1, name: '–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å', category: '–ì–æ—Ä–º–æ–Ω—ã', completed: true, uploadedAt: '2024-06-15' },
    { id: 2, name: '–£–ó–ò –æ—Ä–≥–∞–Ω–æ–≤ –º–∞–ª–æ–≥–æ —Ç–∞–∑–∞', category: '–£–ó–ò', completed: true, uploadedAt: '2024-06-10' },
    { id: 3, name: '–ê–Ω–∞–ª–∏–∑ –Ω–∞ –∏–Ω—Ñ–µ–∫—Ü–∏–∏ TORCH', category: '–ò–Ω—Ñ–µ–∫—Ü–∏–∏', completed: false },
    { id: 4, name: '–ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', category: '–ì–µ–Ω–µ—Ç–∏–∫–∞', completed: false },
    { id: 5, name: '–û–±—â–∏–π –∏ –±–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏', category: '–ö—Ä–æ–≤—å', completed: true, uploadedAt: '2024-06-12' },
    { id: 6, name: '–ê–Ω–∞–ª–∏–∑ –Ω–∞ –≤–∏—Ç–∞–º–∏–Ω—ã –∏ –º–∏–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç—ã', category: '–í–∏—Ç–∞–º–∏–Ω—ã', completed: false },
  ];

  const completedTests = requiredTests.filter(test => test.completed).length;
  const progressPercentage = Math.round((completedTests / requiredTests.length) * 100);

  const educationalContent = [
    {
      id: 1,
      title: '–ü–∏—Ç–∞–Ω–∏–µ –¥–æ –∑–∞—á–∞—Ç–∏—è',
      description: '–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–∏–µ—Ç–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏',
      duration: '8 –º–∏–Ω',
      verified: true,
      category: '–ü–∏—Ç–∞–Ω–∏–µ'
    },
    {
      id: 2,
      title: '–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ –∏ –≤–∏—Ç–∞–º–∏–Ω—ã',
      description: '–í–∞–∂–Ω–æ—Å—Ç—å –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏',
      duration: '6 –º–∏–Ω',
      verified: true,
      category: '–í–∏—Ç–∞–º–∏–Ω—ã'
    },
    {
      id: 3,
      title: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏',
      description: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç—å',
      duration: '10 –º–∏–Ω',
      verified: true,
      category: '–°–ø–æ—Ä—Ç'
    },
    {
      id: 4,
      title: '–°—Ç—Ä–µ—Å—Å –∏ –∑–∞—á–∞—Ç–∏–µ',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–æ–º –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —à–∞–Ω—Å–æ–≤ –∑–∞—á–∞—Ç–∏—è',
      duration: '7 –º–∏–Ω',
      verified: true,
      category: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è'
    }
  ];

  const getStatusInfo = () => {
    switch (planningStatus) {
      case 'preparing':
        return { 
          color: 'bg-amber-100 text-amber-800', 
          icon: 'üü†', 
          label: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
          description: '–°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø—Ä–æ—Ö–æ–¥–∏–º –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'
        };
      case 'active':
        return { 
          color: 'bg-green-100 text-green-800', 
          icon: 'üü¢', 
          label: '–ê–∫—Ç–∏–≤–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
          description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ü–∏–∫–ª—ã –∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –¥–Ω–∏ –¥–ª—è –∑–∞—á–∞—Ç–∏—è'
        };
      case 'consultation':
        return { 
          color: 'bg-blue-100 text-blue-800', 
          icon: 'üîµ', 
          label: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
          description: '–†–∞–±–æ—Ç–∞–µ–º —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤'
        };
      default:
        return { 
          color: 'bg-gray-100 text-gray-800', 
          icon: '‚ö™', 
          label: '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω',
          description: ''
        };
    }
  };

  const statusInfo = getStatusInfo();

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      <div className="container mx-auto px-4 py-8">
        <BackButton fallbackPath="/womens-health-demo" className="mb-6" />
        
        <div className="max-w-6xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å */}
          <div className="text-center mb-8">
            <div className="flex items-center justify-center gap-3 mb-4">
              <div className="p-3 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full">
                <Baby className="w-8 h-8 text-white" />
              </div>
              <h1 className="text-4xl font-bold text-gray-800">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏</h1>
            </div>
            
            <Badge className={`${statusInfo.color} text-lg px-4 py-2 mb-2`}>
              {statusInfo.icon} {statusInfo.label}
            </Badge>
            <p className="text-gray-600 max-w-2xl mx-auto">{statusInfo.description}</p>
          </div>

          <Tabs defaultValue="status" className="w-full">
            <TabsList className="grid w-full grid-cols-4 mb-8">
              <TabsTrigger value="status" className="flex items-center gap-2">
                <Activity className="w-4 h-4" />
                –°—Ç–∞—Ç—É—Å
              </TabsTrigger>
              <TabsTrigger value="tests" className="flex items-center gap-2">
                <FileText className="w-4 h-4" />
                –ê–Ω–∞–ª–∏–∑—ã
              </TabsTrigger>
              <TabsTrigger value="education" className="flex items-center gap-2">
                <BookOpen className="w-4 h-4" />
                –û–±—É—á–µ–Ω–∏–µ
              </TabsTrigger>
              <TabsTrigger value="consultation" className="flex items-center gap-2">
                <Video className="w-4 h-4" />
                –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
              </TabsTrigger>
            </TabsList>

            <TabsContent value="status" className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ */}
                <Card className="border-2 border-blue-200">
                  <CardHeader className="bg-gradient-to-r from-blue-50 to-cyan-50">
                    <CardTitle className="flex items-center gap-2 text-blue-700">
                      <CalendarIcon className="w-5 h-5" />
                      –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ñ–µ—Ä—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
                    </CardTitle>
                    <CardDescription>
                      –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –¥–Ω–∏ –¥–ª—è –∑–∞—á–∞—Ç–∏—è –≤ —ç—Ç–æ–º —Ü–∏–∫–ª–µ
                    </CardDescription>
                  </CardHeader>
                  <CardContent className="p-4">
                    <Calendar
                      mode="single"
                      selected={selectedDate}
                      onSelect={setSelectedDate}
                      locale={ru}
                      className="w-full"
                      modifiers={{
                        fertile: (date) => {
                          const day = date.getDate();
                          return day >= 12 && day <= 16;
                        },
                        ovulation: (date) => date.getDate() === 14,
                      }}
                      modifiersStyles={{
                        fertile: { 
                          backgroundColor: '#dbeafe', 
                          color: '#1e40af',
                          fontWeight: 'bold'
                        },
                        ovulation: { 
                          backgroundColor: '#fef3c7', 
                          color: '#d97706',
                          fontWeight: 'bold'
                        }
                      }}
                    />
                    {selectedDate && (
                      <div className="mt-4 p-3 bg-blue-50 rounded-lg">
                        <p className="text-sm font-medium text-blue-800">
                          {format(selectedDate, 'dd MMMM yyyy', { locale: ru })}
                        </p>
                        <p className="text-sm text-blue-600">
                          {getFertilityInfo(selectedDate).label}
                        </p>
                      </div>
                    )}
                  </CardContent>
                </Card>

                {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è */}
                <Card className="border-2 border-purple-200">
                  <CardHeader className="bg-gradient-to-r from-purple-50 to-pink-50">
                    <CardTitle className="flex items-center gap-2 text-purple-700">
                      <Heart className="w-5 h-5" />
                      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="p-6 space-y-4">
                    <div className="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
                      <Apple className="w-5 h-5 text-green-600" />
                      <div>
                        <p className="font-medium text-green-800">–ü—Ä–∏–Ω—è—Ç—å —Ñ–æ–ª–∏–µ–≤—É—é –∫–∏—Å–ª–æ—Ç—É</p>
                        <p className="text-sm text-green-600">400 –º–∫–≥ —É—Ç—Ä–æ–º</p>
                      </div>
                    </div>
                    
                    <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
                      <Activity className="w-5 h-5 text-blue-600" />
                      <div>
                        <p className="font-medium text-blue-800">–£–º–µ—Ä–µ–Ω–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                        <p className="text-sm text-blue-600">30 –º–∏–Ω—É—Ç —Ö–æ–¥—å–±—ã –∏–ª–∏ –π–æ–≥–∏</p>
                      </div>
                    </div>
                    
                    <div className="flex items-center gap-3 p-3 bg-purple-50 rounded-lg">
                      <Flower2 className="w-5 h-5 text-purple-600" />
                      <div>
                        <p className="font-medium text-purple-800">–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏</p>
                        <p className="text-sm text-purple-600">–ú–µ–¥–∏—Ç–∞—Ü–∏—è –∏–ª–∏ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>

            <TabsContent value="tests" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <FileText className="w-5 h-5" />
                    –ü—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–æ–≤
                  </CardTitle>
                  <CardDescription>
                    –í—ã–ø–æ–ª–Ω–µ–Ω–æ {completedTests} –∏–∑ {requiredTests.length} –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center gap-4 mb-6">
                    <Progress value={progressPercentage} className="flex-1" />
                    <span className="font-bold text-lg text-blue-600">{progressPercentage}%</span>
                  </div>
                  
                  <div className="grid gap-4">
                    {requiredTests.map((test) => (
                      <div key={test.id} className={`p-4 rounded-lg border-2 ${
                        test.completed 
                          ? 'bg-green-50 border-green-200' 
                          : 'bg-gray-50 border-gray-200'
                      }`}>
                        <div className="flex items-center justify-between">
                          <div className="flex items-center gap-3">
                            {test.completed ? (
                              <CheckCircle className="w-5 h-5 text-green-600" />
                            ) : (
                              <Clock className="w-5 h-5 text-gray-400" />
                            )}
                            <div>
                              <h4 className="font-medium">{test.name}</h4>
                              <p className="text-sm text-gray-600">{test.category}</p>
                              {test.uploadedAt && (
                                <p className="text-xs text-green-600">
                                  –ó–∞–≥—Ä—É–∂–µ–Ω–æ {format(new Date(test.uploadedAt), 'dd.MM.yyyy')}
                                </p>
                              )}
                            </div>
                          </div>
                          
                          {!test.completed && (
                            <Button size="sm" variant="outline" className="gap-2">
                              <Upload className="w-4 h-4" />
                              –ó–∞–≥—Ä—É–∑–∏—Ç—å
                            </Button>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="education" className="space-y-6">
              <div className="grid md:grid-cols-2 gap-6">
                {educationalContent.map((content) => (
                  <Card key={content.id} className="hover:shadow-lg transition-shadow">
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <CardTitle className="text-lg">{content.title}</CardTitle>
                        {content.verified && (
                          <Badge className="bg-green-100 text-green-800">
                            <Shield className="w-3 h-3 mr-1" />
                            –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤—Ä–∞—á–æ–º
                          </Badge>
                        )}
                      </div>
                      <CardDescription>{content.description}</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-2 text-sm text-gray-600">
                          <Clock className="w-4 h-4" />
                          {content.duration}
                          <Badge variant="outline">{content.category}</Badge>
                        </div>
                        <Button size="sm">–ß–∏—Ç–∞—Ç—å</Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="consultation" className="space-y-6">
              <div className="grid md:grid-cols-3 gap-6">
                {[
                  { 
                    type: '–ì–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è', 
                    icon: 'üë©‚Äç‚öïÔ∏è', 
                    description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∞ –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏',
                    available: true
                  },
                  { 
                    type: '–ì–µ–Ω–µ—Ç–∏–∫–∞', 
                    icon: 'üß¨', 
                    description: '–ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤',
                    available: true
                  },
                  { 
                    type: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', 
                    icon: 'ü§±', 
                    description: '–†–∞–±–æ—Ç–∞ —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å—Ç–≤—É',
                    available: false
                  }
                ].map((consultation, index) => (
                  <Card key={index} className={`${
                    consultation.available 
                      ? 'border-green-200 hover:shadow-lg' 
                      : 'border-gray-200 opacity-75'
                  } transition-all`}>
                    <CardHeader className="text-center">
                      <div className="text-4xl mb-2">{consultation.icon}</div>
                      <CardTitle className="text-lg">{consultation.type}</CardTitle>
                      <CardDescription>{consultation.description}</CardDescription>
                    </CardHeader>
                    <CardContent className="text-center">
                      <Button 
                        className="w-full" 
                        disabled={!consultation.available}
                        variant={consultation.available ? "default" : "secondary"}
                      >
                        {consultation.available ? '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è' : '–°–∫–æ—Ä–æ –¥–æ—Å—Ç—É–ø–Ω–æ'}
                      </Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
              
              <Card className="bg-blue-50 border-blue-200">
                <CardContent className="p-6">
                  <div className="flex items-center gap-4">
                    <Stethoscope className="w-8 h-8 text-blue-600" />
                    <div>
                      <h3 className="font-semibold text-blue-800">–°–ª–µ–¥—É—é—â–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</h3>
                      <p className="text-blue-600">–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 25 –∏—é–Ω—è –≤ 14:00 —Å –≥–∏–Ω–µ–∫–æ–ª–æ–≥–æ–º</p>
                      <p className="text-sm text-blue-500">–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —á–µ—Ä–µ–∑ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  );
};

export default PregnancyPlanningPage;
