/**
 * components/gail-calculator/steps/PersonalInfoStep.tsx
 * 
 * –®–∞–≥ 1: –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
 * üíñ –ó–∞–±–æ—Ç–ª–∏–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å —Ç–µ–ø–ª—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
 */

import React from 'react';
import { motion } from 'framer-motion';
import { User, Calendar, Ruler, Weight } from 'lucide-react';

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
interface PersonalInfo {
  age?: number;
  race?: string;
  height?: number;
  weight?: number;
}

interface ValidationError {
  field: string;
  message: string;
}

interface PersonalInfoStepProps {
  data: Partial<PersonalInfo>;
  onChange: (data: Partial<PersonalInfo>) => void;
  errors: ValidationError[];
}

export const PersonalInfoStep: React.FC<PersonalInfoStepProps> = ({
  data,
  onChange,
  errors,
}) => {
  const handleChange = (field: keyof PersonalInfo, value: any) => {
    onChange({ ...data, [field]: value });
  };

  const getFieldError = (field: string) => {
    return errors.find(error => error.field.includes(field))?.message;
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6"
    >
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* –í–æ–∑—Ä–∞—Å—Ç */}
        <div className="space-y-2">
          <label className="flex items-center space-x-2 text-sm font-medium text-gray-700">
            <Calendar className="w-4 h-4 text-pink-500" />
            <span>–í–æ–∑—Ä–∞—Å—Ç <span className="text-red-500">*</span></span>
          </label>
          <input
            type="number"
            min="35"
            max="85"
            value={data.age || ''}
            onChange={(e) => handleChange('age', parseInt(e.target.value))}
            className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all ${
              getFieldError('age') ? 'border-red-300 bg-red-50' : 'border-gray-200'
            }`}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç"
          />
          {getFieldError('age') && (
            <p className="text-red-600 text-sm">{getFieldError('age')}</p>
          )}
          <p className="text-gray-500 text-xs">
            –ú–æ–¥–µ–ª—å Gail —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –¥–ª—è –∂–µ–Ω—â–∏–Ω 35-85 –ª–µ—Ç
          </p>
        </div>

        {/* –≠—Ç–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å */}
        <div className="space-y-2">
          <label className="flex items-center space-x-2 text-sm font-medium text-gray-700">
            <User className="w-4 h-4 text-pink-500" />
            <span>–≠—Ç–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å <span className="text-red-500">*</span></span>
          </label>
          <select
            value={data.race || ''}
            onChange={(e) => handleChange('race', e.target.value)}
            className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all ${
              getFieldError('race') ? 'border-red-300 bg-red-50' : 'border-gray-200'
            }`}
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
            <option value="caucasian">–ï–≤—Ä–æ–ø–µ–æ–∏–¥–Ω–∞—è</option>
            <option value="african_american">–ê—Ñ—Ä–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è</option>
            <option value="hispanic">–õ–∞—Ç–∏–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è</option>
            <option value="asian">–ê–∑–∏–∞—Ç—Å–∫–∞—è</option>
            <option value="other">–î—Ä—É–≥–∞—è</option>
          </select>
          {getFieldError('race') && (
            <p className="text-red-600 text-sm">{getFieldError('race')}</p>
          )}
        </div>

        {/* –†–æ—Å—Ç */}
        <div className="space-y-2">
          <label className="flex items-center space-x-2 text-sm font-medium text-gray-700">
            <Ruler className="w-4 h-4 text-pink-500" />
            <span>–†–æ—Å—Ç (—Å–º)</span>
          </label>
          <input
            type="number"
            min="100"
            max="250"
            value={data.height || ''}
            onChange={(e) => handleChange('height', parseInt(e.target.value))}
            className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all ${
              getFieldError('height') ? 'border-red-300 bg-red-50' : 'border-gray-200'
            }`}
            placeholder="165"
          />
          {getFieldError('height') && (
            <p className="text-red-600 text-sm">{getFieldError('height')}</p>
          )}
        </div>

        {/* –í–µ—Å */}
        <div className="space-y-2">
          <label className="flex items-center space-x-2 text-sm font-medium text-gray-700">
            <Weight className="w-4 h-4 text-pink-500" />
            <span>–í–µ—Å (–∫–≥)</span>
          </label>
          <input
            type="number"
            min="30"
            max="300"
            value={data.weight || ''}
            onChange={(e) => handleChange('weight', parseInt(e.target.value))}
            className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all ${
              getFieldError('weight') ? 'border-red-300 bg-red-50' : 'border-gray-200'
            }`}
            placeholder="60"
          />
          {getFieldError('weight') && (
            <p className="text-red-600 text-sm">{getFieldError('weight')}</p>
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-pink-50 rounded-xl p-4 border border-pink-200">
        <h4 className="font-medium text-pink-800 mb-2">üíñ –ü–æ—á–µ–º—É —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–∂–Ω—ã?</h4>
        <ul className="text-sm text-pink-700 space-y-1">
          <li>‚Ä¢ <strong>–í–æ–∑—Ä–∞—Å—Ç</strong> - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã</li>
          <li>‚Ä¢ <strong>–≠—Ç–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å</strong> - –≤–ª–∏—è–µ—Ç –Ω–∞ –±–∞–∑–æ–≤—ã–µ —Ä–∏—Å–∫–∏</li>
          <li>‚Ä¢ <strong>–†–æ—Å—Ç –∏ –≤–µ—Å</strong> - –ø–æ–º–æ–≥–∞—é—Ç –æ—Ü–µ–Ω–∏—Ç—å –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã</li>
        </ul>
      </div>
    </motion.div>
  );
};

export default PersonalInfoStep;