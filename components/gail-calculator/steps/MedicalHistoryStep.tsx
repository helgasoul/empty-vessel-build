/**
 * components/gail-calculator/steps/MedicalHistoryStep.tsx
 * 
 * –®–∞–≥ 2: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è
 * üíñ –î–µ–ª–∏–∫–∞—Ç–Ω–æ–µ —Å–æ–±–∏—Ä–∞–Ω–∏–µ —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏
 */

import React from 'react';
import { motion } from 'framer-motion';
import { FileText, Calendar, Baby, Activity, Heart } from 'lucide-react';

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
interface HormonalTherapy {
  everUsed: boolean;
  currentlyUsing?: boolean;
  durationMonths?: number;
  type?: 'estrogen_only' | 'combined' | 'other';
}

interface HormonalContraception {
  everUsed: boolean;
  currentlyUsing?: boolean;
  durationMonths?: number;
  ageStarted?: number;
  ageStopped?: number;
}

interface MedicalHistory {
  ageAtMenarche: number;
  ageAtFirstBirth?: number;
  numberOfBirths: number;
  numberOfBiopsies: number;
  atypicalHyperplasia: boolean;
  lobularCarcinomaInSitu: boolean;
  hormonalReplacementTherapy?: HormonalTherapy;
  hormonalContraception?: HormonalContraception;
  breastfeedingMonths?: number;
  ageAtMenopause?: number;
}

interface ValidationError {
  field: string;
  message: string;
}

interface MedicalHistoryStepProps {
  data: Partial<MedicalHistory>;
  onChange: (data: Partial<MedicalHistory>) => void;
  errors: ValidationError[];
}

export const MedicalHistoryStep: React.FC<MedicalHistoryStepProps> = ({
  data,
  onChange,
  errors,
}) => {
  const handleChange = (field: keyof MedicalHistory, value: any) => {
    onChange({ ...data, [field]: value });
  };

  const getFieldError = (field: string) => {
    return errors.find(error => error.field.includes(field))?.message;
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6"
    >
      {/* –ë–∞–∑–æ–≤–∞—è —Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è */}
      <div className="bg-purple-50 rounded-xl p-6 border border-purple-200">
        <h3 className="font-semibold text-purple-800 mb-4 flex items-center space-x-2">
          <Calendar className="w-5 h-5" />
          <span>–†–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è</span>
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* –í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ */}
          <div className="space-y-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-purple-700">
              <Calendar className="w-4 h-4" />
              <span>–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏ <span className="text-red-500">*</span></span>
            </label>
            <input
              type="number"
              min="8"
              max="17"
              value={data.ageAtMenarche || ''}
              onChange={(e) => handleChange('ageAtMenarche', parseInt(e.target.value))}
              className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all ${
                getFieldError('ageAtMenarche') ? 'border-red-300 bg-red-50' : 'border-purple-200'
              }`}
              placeholder="12"
            />
            {getFieldError('ageAtMenarche') && (
              <p className="text-red-600 text-sm">{getFieldError('ageAtMenarche')}</p>
            )}
            <p className="text-purple-600 text-xs">
              –û–±—ã—á–Ω–æ –æ—Ç 8 –¥–æ 17 –ª–µ—Ç
            </p>
          </div>

          {/* –í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–æ–ø–∞—É–∑—ã */}
          <div className="space-y-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-purple-700">
              <Calendar className="w-4 h-4" />
              <span>–í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–æ–ø–∞—É–∑—ã (–µ—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–∞)</span>
            </label>
            <input
              type="number"
              min="35"
              max="65"
              value={data.ageAtMenopause || ''}
              onChange={(e) => handleChange('ageAtMenopause', parseInt(e.target.value) || undefined)}
              className="w-full px-4 py-3 rounded-xl border-2 border-purple-200 focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all"
              placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –º–µ–Ω–æ–ø–∞—É–∑–∞ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–∞"
            />
            <p className="text-purple-600 text-xs">
              –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –º–µ–Ω–æ–ø–∞—É–∑–∞ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–∞
            </p>
          </div>
        </div>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–µ–π –∏ —Ä–æ–¥–æ–≤ */}
      <div className="bg-pink-50 rounded-xl p-6 border border-pink-200">
        <h3 className="font-semibold text-pink-800 mb-4 flex items-center space-x-2">
          <Baby className="w-5 h-5" />
          <span>–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ä–æ–¥—ã</span>
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* –í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤ */}
          <div className="space-y-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-pink-700">
              <Baby className="w-4 h-4" />
              <span>–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤</span>
            </label>
            <input
              type="number"
              min="12"
              max="50"
              value={data.ageAtFirstBirth || ''}
              onChange={(e) => handleChange('ageAtFirstBirth', parseInt(e.target.value) || undefined)}
              className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all ${
                getFieldError('ageAtFirstBirth') ? 'border-red-300 bg-red-50' : 'border-pink-200'
              }`}
              placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ —Ä–æ–∂–∞–ª–∏"
            />
            {getFieldError('ageAtFirstBirth') && (
              <p className="text-red-600 text-sm">{getFieldError('ageAtFirstBirth')}</p>
            )}
            <p className="text-pink-600 text-xs">
              –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –¥–µ—Ç–µ–π –Ω–µ—Ç
            </p>
          </div>

          {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥–æ–≤ */}
          <div className="space-y-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-pink-700">
              <Baby className="w-4 h-4" />
              <span>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥–æ–≤</span>
            </label>
            <input
              type="number"
              min="0"
              max="15"
              value={data.numberOfBirths || 0}
              onChange={(e) => handleChange('numberOfBirths', parseInt(e.target.value))}
              className="w-full px-4 py-3 rounded-xl border-2 border-pink-200 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all"
              placeholder="0"
            />
          </div>

          {/* –ì—Ä—É–¥–Ω–æ–µ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–µ */}
          <div className="space-y-2 md:col-span-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-pink-700">
              <Heart className="w-4 h-4" />
              <span>–û–±—â–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä—É–¥–Ω–æ–≥–æ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏—è (–º–µ—Å—è—Ü–µ–≤)</span>
            </label>
            <input
              type="number"
              min="0"
              max="120"
              value={data.breastfeedingMonths || ''}
              onChange={(e) => handleChange('breastfeedingMonths', parseInt(e.target.value) || undefined)}
              className="w-full px-4 py-3 rounded-xl border-2 border-pink-200 focus:ring-2 focus:ring-pink-400 focus:border-transparent transition-all"
              placeholder="0"
            />
            <p className="text-pink-600 text-xs">
              –°—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –≥—Ä—É–¥–Ω–æ–≥–æ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏—è
            </p>
          </div>
        </div>
      </div>

      {/* –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã */}
      <div className="bg-indigo-50 rounded-xl p-6 border border-indigo-200">
        <h3 className="font-semibold text-indigo-800 mb-4 flex items-center space-x-2">
          <FileText className="w-5 h-5" />
          <span>–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã</span>
        </h3>
        
        <div className="space-y-4">
          {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π */}
          <div className="space-y-2">
            <label className="flex items-center space-x-2 text-sm font-medium text-indigo-700">
              <FileText className="w-4 h-4" />
              <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã <span className="text-red-500">*</span></span>
            </label>
            <input
              type="number"
              min="0"
              max="10"
              value={data.numberOfBiopsies || 0}
              onChange={(e) => handleChange('numberOfBiopsies', parseInt(e.target.value))}
              className={`w-full px-4 py-3 rounded-xl border-2 focus:ring-2 focus:ring-indigo-400 focus:border-transparent transition-all ${
                getFieldError('numberOfBiopsies') ? 'border-red-300 bg-red-50' : 'border-indigo-200'
              }`}
              placeholder="0"
            />
            {getFieldError('numberOfBiopsies') && (
              <p className="text-red-600 text-sm">{getFieldError('numberOfBiopsies')}</p>
            )}
            <p className="text-indigo-600 text-xs">
              –í–∫–ª—é—á–∞—è –≤—Å–µ –≤–∏–¥—ã –±–∏–æ–ø—Å–∏–π (–ø—É–Ω–∫—Ü–∏–æ–Ω–Ω—ã–µ, —Ç—Ä–µ–ø–∞–Ω-–±–∏–æ–ø—Å–∏–∏ –∏ –¥—Ä.)
            </p>
          </div>

          {/* –ü–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
          <div className="space-y-3">
            <p className="text-sm font-medium text-indigo-700">
              –ë—ã–ª–∏ –ª–∏ —É –≤–∞—Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
            </p>
            
            <div className="space-y-2">
              <div className="flex items-center space-x-3">
                <input
                  type="checkbox"
                  id="atypicalHyperplasia"
                  checked={data.atypicalHyperplasia || false}
                  onChange={(e) => handleChange('atypicalHyperplasia', e.target.checked)}
                  className="w-5 h-5 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500"
                />
                <label htmlFor="atypicalHyperplasia" className="text-sm text-indigo-700">
                  <strong>–ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è</strong> - –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ —Ä–∞–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ –∫–ª–µ—Ç–æ–∫ —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                </label>
              </div>

              <div className="flex items-center space-x-3">
                <input
                  type="checkbox"
                  id="lobularCarcinoma"
                  checked={data.lobularCarcinomaInSitu || false}
                  onChange={(e) => handleChange('lobularCarcinomaInSitu', e.target.checked)}
                  className="w-5 h-5 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500"
                />
                <label htmlFor="lobularCarcinoma" className="text-sm text-indigo-700">
                  <strong>–î–æ–ª—å–∫–æ–≤–∞—è –∫–∞—Ä—Ü–∏–Ω–æ–º–∞ in situ (LCIS)</strong> - –ø—Ä–µ–¥—Ä–∞–∫–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è */}
      <div className="bg-green-50 rounded-xl p-6 border border-green-200">
        <h3 className="font-semibold text-green-800 mb-4 flex items-center space-x-2">
          <Activity className="w-5 h-5" />
          <span>–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è</span>
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* –ó–ì–¢ */}
          <div className="space-y-4">
            <h4 className="font-medium text-green-700">–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è (–ó–ì–¢)</h4>
            
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <input
                  type="checkbox"
                  id="hrtEverUsed"
                  checked={data.hormonalReplacementTherapy?.everUsed || false}
                  onChange={(e) => handleChange('hormonalReplacementTherapy', {
                    ...data.hormonalReplacementTherapy,
                    everUsed: e.target.checked
                  })}
                  className="w-5 h-5 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                />
                <label htmlFor="hrtEverUsed" className="text-sm text-green-700">
                  –ü—Ä–∏–º–µ–Ω—è–ª–∞ –∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é –ó–ì–¢
                </label>
              </div>

              {data.hormonalReplacementTherapy?.everUsed && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  className="space-y-3 pl-8"
                >
                  <div>
                    <label className="block text-sm font-medium text-green-700 mb-1">
                      –¢–∏–ø –ó–ì–¢
                    </label>
                    <select
                      value={data.hormonalReplacementTherapy?.type || ''}
                      onChange={(e) => handleChange('hormonalReplacementTherapy', {
                        ...data.hormonalReplacementTherapy,
                        type: e.target.value as 'estrogen_only' | 'combined' | 'other'
                      })}
                      className="w-full px-3 py-2 rounded-lg border border-green-200 focus:ring-2 focus:ring-green-400"
                    >
                      <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                      <option value="estrogen_only">–¢–æ–ª—å–∫–æ —ç—Å—Ç—Ä–æ–≥–µ–Ω—ã</option>
                      <option value="combined">–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è (—ç—Å—Ç—Ä–æ–≥–µ–Ω + –ø—Ä–æ–≥–µ—Å—Ç–∏–Ω)</option>
                      <option value="other">–î—Ä—É–≥–æ–π —Ç–∏–ø</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-green-700 mb-1">
                      –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–µ–º–∞ (–º–µ—Å—è—Ü–µ–≤)
                    </label>
                    <input
                      type="number"
                      min="0"
                      max="600"
                      value={data.hormonalReplacementTherapy?.durationMonths || ''}
                      onChange={(e) => handleChange('hormonalReplacementTherapy', {
                        ...data.hormonalReplacementTherapy,
                        durationMonths: parseInt(e.target.value)
                      })}
                      className="w-full px-3 py-2 rounded-lg border border-green-200 focus:ring-2 focus:ring-green-400"
                      placeholder="0"
                    />
                  </div>

                  <div className="flex items-center space-x-3">
                    <input
                      type="checkbox"
                      id="hrtCurrently"
                      checked={data.hormonalReplacementTherapy?.currentlyUsing || false}
                      onChange={(e) => handleChange('hormonalReplacementTherapy', {
                        ...data.hormonalReplacementTherapy,
                        currentlyUsing: e.target.checked
                      })}
                      className="w-4 h-4 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                    />
                    <label htmlFor="hrtCurrently" className="text-sm text-green-700">
                      –ü—Ä–∏–º–µ–Ω—è—é –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è
                    </label>
                  </div>
                </motion.div>
              )}
            </div>
          </div>

          {/* –ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ü–∏—è */}
          <div className="space-y-4">
            <h4 className="font-medium text-green-700">–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ü–∏—è</h4>
            
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <input
                  type="checkbox"
                  id="contraceptionEverUsed"
                  checked={data.hormonalContraception?.everUsed || false}
                  onChange={(e) => handleChange('hormonalContraception', {
                    ...data.hormonalContraception,
                    everUsed: e.target.checked
                  })}
                  className="w-5 h-5 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                />
                <label htmlFor="contraceptionEverUsed" className="text-sm text-green-700">
                  –ü—Ä–∏–º–µ–Ω—è–ª–∞ –∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤—ã
                </label>
              </div>

              {data.hormonalContraception?.everUsed && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  className="space-y-3 pl-8"
                >
                  <div className="grid grid-cols-2 gap-3">
                    <div>
                      <label className="block text-sm font-medium text-green-700 mb-1">
                        –í–æ–∑—Ä–∞—Å—Ç –Ω–∞—á–∞–ª–∞
                      </label>
                      <input
                        type="number"
                        min="12"
                        max="50"
                        value={data.hormonalContraception?.ageStarted || ''}
                        onChange={(e) => handleChange('hormonalContraception', {
                          ...data.hormonalContraception,
                          ageStarted: parseInt(e.target.value)
                        })}
                        className="w-full px-3 py-2 rounded-lg border border-green-200 focus:ring-2 focus:ring-green-400"
                        placeholder="18"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-green-700 mb-1">
                        –í–æ–∑—Ä–∞—Å—Ç –æ–∫–æ–Ω—á–∞–Ω–∏—è
                      </label>
                      <input
                        type="number"
                        min="12"
                        max="55"
                        value={data.hormonalContraception?.ageStopped || ''}
                        onChange={(e) => handleChange('hormonalContraception', {
                          ...data.hormonalContraception,
                          ageStopped: parseInt(e.target.value)
                        })}
                        className="w-full px-3 py-2 rounded-lg border border-green-200 focus:ring-2 focus:ring-green-400"
                        placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ"
                      />
                    </div>
                  </div>

                  <div className="flex items-center space-x-3">
                    <input
                      type="checkbox"
                      id="contraceptionCurrently"
                      checked={data.hormonalContraception?.currentlyUsing || false}
                      onChange={(e) => handleChange('hormonalContraception', {
                        ...data.hormonalContraception,
                        currentlyUsing: e.target.checked
                      })}
                      className="w-4 h-4 text-green-600 bg-gray-100 border-gray-300 rounded focus:ring-green-500"
                    />
                    <label htmlFor="contraceptionCurrently" className="text-sm text-green-700">
                      –ü—Ä–∏–º–µ–Ω—è—é –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è
                    </label>
                  </div>
                </motion.div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-4 border border-purple-200">
        <h4 className="font-medium text-purple-800 mb-2">üî¨ –ö–∞–∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∏—Å–∫–∏</h4>
        <ul className="text-sm text-purple-700 space-y-1">
          <li>‚Ä¢ <strong>–†–∞–Ω–Ω—è—è –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è</strong> (–¥–æ 12 –ª–µ—Ç) –Ω–µ–º–Ω–æ–≥–æ –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫</li>
          <li>‚Ä¢ <strong>–ü–æ–∑–¥–Ω–∏–µ —Ä–æ–¥—ã</strong> (–ø–æ—Å–ª–µ 30) –∏–ª–∏ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ä–∏—Å–∫</li>
          <li>‚Ä¢ <strong>–ì—Ä—É–¥–Ω–æ–µ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–µ</strong> —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
          <li>‚Ä¢ <strong>–ë–∏–æ–ø—Å–∏–∏</strong> –º–æ–≥—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–∫–∞–Ω—è—Ö –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã</li>
          <li>‚Ä¢ <strong>–ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è –∏ LCIS</strong> –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫</li>
          <li>‚Ä¢ <strong>–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è</strong> –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–∏—Å–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
        </ul>
      </div>
    </motion.div>
  );
};

export default MedicalHistoryStep;