/**
 * hooks/useGailCalculator.ts
 * 
 * –•—É–∫ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∏—Å–∫–æ–≤ –ø–æ –º–æ–¥–µ–ª–∏ Gail
 * üßÆ –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
 */

import { useState, useCallback, useRef } from 'react';

// ========================================
// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
// ========================================

export interface PersonalInfo {
  age: number;
  race: 'caucasian' | 'african_american' | 'hispanic' | 'asian' | 'other';
  height: number;
  weight: number;
}

export interface MedicalHistory {
  ageAtMenarche: number;
  ageAtFirstBirth?: number;
  numberOfBirths: number;
  numberOfBiopsies: number;
  atypicalHyperplasia: boolean;
  lobularCarcinomaInSitu: boolean;
  breastfeedingMonths?: number;
  ageAtMenopause?: number;
}

export interface FamilyHistory {
  breastCancerRelatives: number;
  ovarianCancerRelatives: number;
  firstDegreeRelatives?: {
    mother: boolean;
    sisters: number;
    daughters: number;
  };
  maleBreastCancer: boolean;
  knownGeneticMutations?: string[];
  averageAgeAtDiagnosis?: number;
  paternalHistory?: boolean;
  maternalHistory?: boolean;
}

export interface GailCalculatorInput {
  personalInfo: PersonalInfo;
  medicalHistory: MedicalHistory;
  familyHistory: FamilyHistory;
}

export interface ValidationError {
  field: string;
  message: string;
}

export interface RiskFactor {
  name: string;
  value: string;
  impact: 'protective' | 'neutral' | 'moderate' | 'high';
  description: string;
  evidenceLevel: 'low' | 'moderate' | 'high';
}

export interface Recommendation {
  type: 'screening' | 'lifestyle' | 'genetic' | 'medical';
  priority: 'low' | 'medium' | 'high' | 'urgent';
  title: string;
  description: string;
  actionItems: string[];
  evidenceLevel: 'low' | 'moderate' | 'high';
}

export type RiskLevel = 'low' | 'moderate' | 'high' | 'very_high';

export interface GailCalculatorResult {
  fiveYearRisk: number;
  lifetimeRisk: number;
  riskLevel: RiskLevel;
  comparedToAverage: number;
  riskFactors: RiskFactor[];
  recommendations: Recommendation[];
}

export interface CalculationProgress {
  step: string;
  percentage: number;
  message: string;
}

export interface UseGailCalculatorReturn {
  calculate: (input: GailCalculatorInput) => Promise<GailCalculatorResult>;
  validateInput: (input: Partial<GailCalculatorInput>) => ValidationError[];
  isCalculating: boolean;
  progress: CalculationProgress | null;
  formatRisk: (risk: number) => string;
  getRiskLevel: (risk: number) => RiskLevel;
  clearCache: () => void;
}

// ========================================
// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –º–æ–¥–µ–ª–∏ Gail
// ========================================

const GAIL_MODEL_CONSTANTS = {
  // –ë–∞–∑–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
  BASE_RATES: {
    35: 0.00023,
    40: 0.00059,
    45: 0.00134,
    50: 0.00226,
    55: 0.00339,
    60: 0.00481,
    65: 0.00642,
    70: 0.00814,
    75: 0.00996,
    80: 0.01180,
    85: 0.01326,
  },
  
  // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
  RELATIVE_RISKS: {
    // –í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ
    ageAtMenarche: {
      '<12': 1.21,
      '12': 1.10,
      '13': 1.00,
      '14+': 0.93,
    },
    
    // –í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤ / –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–æ–¥–æ–≤
    ageAtFirstBirth: {
      'nulliparous': 1.24,
      '<20': 0.73,
      '20-24': 0.90,
      '25-29': 1.00,
      '30+': 1.23,
    },
    
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π
    numberOfBiopsies: {
      0: 1.00,
      1: 1.70,
      '2+': 2.88,
    },
    
    // –ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è
    atypicalHyperplasia: {
      none: 1.00,
      present: 4.17,
    },
    
    // –°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è (—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏)
    familyHistory: {
      0: 1.00,
      1: 2.30,
      '2+': 4.76,
    },
    
    // –≠—Ç–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å (–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã)
    race: {
      caucasian: 1.00,
      african_american: 0.60,
      hispanic: 0.70,
      asian: 0.50,
      other: 0.80,
    },
  },
  
  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ä–∏—Å–∫–∞
  LIFETIME_RISK_MULTIPLIERS: {
    35: 7.8,
    40: 6.9,
    45: 6.0,
    50: 5.2,
    55: 4.4,
    60: 3.7,
    65: 3.0,
    70: 2.4,
    75: 1.8,
    80: 1.3,
    85: 1.0,
  },
};

// ========================================
// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤
// ========================================

const calculateBMI = (height: number, weight: number): number => {
  const heightInM = height / 100;
  return weight / (heightInM * heightInM);
};

const formatRiskPercentage = (risk: number): string => {
  if (risk < 0.01) return '<0.1%';
  if (risk < 0.1) return `${(risk * 100).toFixed(1)}%`;
  return `${(risk * 100).toFixed(0)}%`;
};

const getRiskLevel = (risk: number): RiskLevel => {
  if (risk < 0.015) return 'low';
  if (risk < 0.025) return 'moderate';
  if (risk < 0.04) return 'high';
  return 'very_high';
};

const getClosestAge = (age: number): keyof typeof GAIL_MODEL_CONSTANTS.BASE_RATES => {
  const ages = Object.keys(GAIL_MODEL_CONSTANTS.BASE_RATES).map(Number);
  const closest = ages.reduce((prev, curr) => 
    Math.abs(curr - age) < Math.abs(prev - age) ? curr : prev
  );
  return closest as keyof typeof GAIL_MODEL_CONSTANTS.BASE_RATES;
};

// ========================================
// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
// ========================================

const validateInput = (input: Partial<GailCalculatorInput>): ValidationError[] => {
  const errors: ValidationError[] = [];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  if (!input.personalInfo) {
    errors.push({ field: 'personalInfo', message: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' });
    return errors;
  }

  const { personalInfo, medicalHistory, familyHistory } = input;

  // –í–æ–∑—Ä–∞—Å—Ç
  if (!personalInfo.age || personalInfo.age < 35 || personalInfo.age > 85) {
    errors.push({ 
      field: 'personalInfo.age', 
      message: '–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 35 –¥–æ 85 –ª–µ—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ –º–æ–¥–µ–ª–∏ Gail' 
    });
  }

  // –†–æ—Å—Ç –∏ –≤–µ—Å
  if (!personalInfo.height || personalInfo.height < 100 || personalInfo.height > 250) {
    errors.push({ field: 'personalInfo.height', message: '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç (100-250 —Å–º)' });
  }

  if (!personalInfo.weight || personalInfo.weight < 30 || personalInfo.weight > 300) {
    errors.push({ field: 'personalInfo.weight', message: '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å (30-300 –∫–≥)' });
  }

  // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è
  if (!medicalHistory) {
    errors.push({ field: 'medicalHistory', message: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' });
    return errors;
  }

  // –í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ
  if (!medicalHistory.ageAtMenarche || medicalHistory.ageAtMenarche < 8 || medicalHistory.ageAtMenarche > 17) {
    errors.push({ 
      field: 'medicalHistory.ageAtMenarche', 
      message: '–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 8 –¥–æ 17 –ª–µ—Ç' 
    });
  }

  // –í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤
  if (medicalHistory.ageAtFirstBirth && 
      (medicalHistory.ageAtFirstBirth < 12 || medicalHistory.ageAtFirstBirth > 50)) {
    errors.push({ 
      field: 'medicalHistory.ageAtFirstBirth', 
      message: '–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 12 –¥–æ 50 –ª–µ—Ç' 
    });
  }

  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π
  if (medicalHistory.numberOfBiopsies < 0 || medicalHistory.numberOfBiopsies > 10) {
    errors.push({ 
      field: 'medicalHistory.numberOfBiopsies', 
      message: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–æ–ø—Å–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 10' 
    });
  }

  // –°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
  if (!familyHistory) {
    errors.push({ field: 'familyHistory', message: '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' });
    return errors;
  }

  if (familyHistory.breastCancerRelatives < 0 || familyHistory.breastCancerRelatives > 10) {
    errors.push({ 
      field: 'familyHistory.breastCancerRelatives', 
      message: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ —Å –†–ú–ñ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 10' 
    });
  }

  return errors;
};

// ========================================
// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –ø–æ –º–æ–¥–µ–ª–∏ Gail
// ========================================

const calculateGailRisk = async (
  input: GailCalculatorInput, 
  updateProgress: (progress: CalculationProgress) => void
): Promise<GailCalculatorResult> => {
  
  updateProgress({ step: 'validation', percentage: 10, message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö...' });
  
  const { personalInfo, medicalHistory, familyHistory } = input;
  
  // 1. –ë–∞–∑–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ä–∏—Å–∫
  updateProgress({ step: 'base_rate', percentage: 25, message: '–†–∞—Å—á–µ—Ç –±–∞–∑–æ–≤–æ–≥–æ —Ä–∏—Å–∫–∞...' });
  
  const ageKey = getClosestAge(personalInfo.age);
  let baseRate = GAIL_MODEL_CONSTANTS.BASE_RATES[ageKey];
  
  // 2. –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —ç—Ç–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏
  updateProgress({ step: 'race_adjustment', percentage: 35, message: '–£—á–µ—Ç —ç—Ç–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏...' });
  
  const raceMultiplier = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.race[personalInfo.race];
  baseRate *= raceMultiplier;
  
  // 3. –§–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞
  updateProgress({ step: 'risk_factors', percentage: 50, message: '–ê–Ω–∞–ª–∏–∑ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞...' });
  
  let relativeRisk = 1.0;
  
  // –í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ
  let menarcheRisk = 1.0;
  if (medicalHistory.ageAtMenarche < 12) {
    menarcheRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtMenarche['<12'];
  } else if (medicalHistory.ageAtMenarche === 12) {
    menarcheRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtMenarche['12'];
  } else if (medicalHistory.ageAtMenarche === 13) {
    menarcheRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtMenarche['13'];
  } else {
    menarcheRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtMenarche['14+'];
  }
  relativeRisk *= menarcheRisk;
  
  // –í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤
  let birthRisk = 1.0;
  if (!medicalHistory.ageAtFirstBirth) {
    birthRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtFirstBirth.nulliparous;
  } else if (medicalHistory.ageAtFirstBirth < 20) {
    birthRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtFirstBirth['<20'];
  } else if (medicalHistory.ageAtFirstBirth < 25) {
    birthRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtFirstBirth['20-24'];
  } else if (medicalHistory.ageAtFirstBirth < 30) {
    birthRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtFirstBirth['25-29'];
  } else {
    birthRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.ageAtFirstBirth['30+'];
  }
  relativeRisk *= birthRisk;
  
  // –ë–∏–æ–ø—Å–∏–∏ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã
  let biopsyRisk = 1.0;
  if (medicalHistory.numberOfBiopsies === 0) {
    biopsyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.numberOfBiopsies[0];
  } else if (medicalHistory.numberOfBiopsies === 1) {
    biopsyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.numberOfBiopsies[1];
  } else {
    biopsyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.numberOfBiopsies['2+'];
  }
  relativeRisk *= biopsyRisk;
  
  // –ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è
  if (medicalHistory.atypicalHyperplasia) {
    relativeRisk *= GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.atypicalHyperplasia.present;
  }
  
  // –°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
  updateProgress({ step: 'family_history', percentage: 65, message: '–ê–Ω–∞–ª–∏–∑ —Å–µ–º–µ–π–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏...' });
  
  let familyRisk = 1.0;
  const breastCancerRelatives = familyHistory.breastCancerRelatives || 0;
  if (breastCancerRelatives === 0) {
    familyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.familyHistory[0];
  } else if (breastCancerRelatives === 1) {
    familyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.familyHistory[1];
  } else {
    familyRisk = GAIL_MODEL_CONSTANTS.RELATIVE_RISKS.familyHistory['2+'];
  }
  relativeRisk *= familyRisk;
  
  // 4. –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
  updateProgress({ step: 'final_calculation', percentage: 80, message: '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–∏—Å–∫–æ–≤...' });
  
  const fiveYearRisk = baseRate * relativeRisk;
  const lifetimeMultiplier = GAIL_MODEL_CONSTANTS.LIFETIME_RISK_MULTIPLIERS[ageKey];
  const lifetimeRisk = Math.min(fiveYearRisk * lifetimeMultiplier, 0.85); // –ú–∞–∫—Å–∏–º—É–º 85%
  
  // 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  updateProgress({ step: 'risk_factors_generation', percentage: 90, message: '–ê–Ω–∞–ª–∏–∑ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞...' });
  
  const riskFactors: RiskFactor[] = [
    {
      name: '–í–æ–∑—Ä–∞—Å—Ç',
      value: `${personalInfo.age} –ª–µ—Ç`,
      impact: personalInfo.age > 50 ? 'high' : personalInfo.age > 40 ? 'moderate' : 'neutral',
      description: personalInfo.age > 50 ? '–†–∏—Å–∫ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º' : '–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π —Ñ–∞–∫—Ç–æ—Ä –≤ –Ω–æ—Ä–º–µ',
      evidenceLevel: 'high',
    },
    {
      name: '–í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ',
      value: `${medicalHistory.ageAtMenarche} –ª–µ—Ç`,
      impact: medicalHistory.ageAtMenarche < 12 ? 'moderate' : 'neutral',
      description: medicalHistory.ageAtMenarche < 12 ? '–†–∞–Ω–Ω—è—è –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫' : '–í–æ–∑—Ä–∞—Å—Ç –º–µ–Ω–∞—Ä—Ö–µ –≤ –Ω–æ—Ä–º–µ',
      evidenceLevel: 'moderate',
    },
    {
      name: '–†–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
      value: medicalHistory.ageAtFirstBirth ? `–ü–µ—Ä–≤—ã–µ —Ä–æ–¥—ã –≤ ${medicalHistory.ageAtFirstBirth} –ª–µ—Ç` : '–ù–µ —Ä–æ–∂–∞–ª–∞',
      impact: !medicalHistory.ageAtFirstBirth || medicalHistory.ageAtFirstBirth > 30 ? 'moderate' : 'protective',
      description: !medicalHistory.ageAtFirstBirth ? '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–æ–¥–æ–≤ –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫' : 
                   medicalHistory.ageAtFirstBirth > 30 ? '–ü–æ–∑–¥–Ω–∏–µ —Ä–æ–¥—ã –ø–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫' : '–†–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫',
      evidenceLevel: 'high',
    },
    {
      name: '–ë–∏–æ–ø—Å–∏–∏ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      value: `${medicalHistory.numberOfBiopsies} –±–∏–æ–ø—Å–∏–π`,
      impact: medicalHistory.numberOfBiopsies > 1 ? 'high' : medicalHistory.numberOfBiopsies === 1 ? 'moderate' : 'neutral',
      description: medicalHistory.numberOfBiopsies > 1 ? '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∏–æ–ø—Å–∏–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫' :
                   medicalHistory.numberOfBiopsies === 1 ? '–ë–∏–æ–ø—Å–∏—è —É–º–µ—Ä–µ–Ω–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫' : '–ë–∏–æ–ø—Å–∏–∏ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å',
      evidenceLevel: 'high',
    },
    {
      name: '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
      value: `${breastCancerRelatives} —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ —Å –†–ú–ñ`,
      impact: breastCancerRelatives > 1 ? 'high' : breastCancerRelatives === 1 ? 'moderate' : 'neutral',
      description: breastCancerRelatives > 1 ? '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏ –≤ —Å–µ–º—å–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞—é—Ç —Ä–∏—Å–∫' :
                   breastCancerRelatives === 1 ? '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —É–º–µ—Ä–µ–Ω–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫' : '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –Ω–µ –æ—Ç—è–≥–æ—â–µ–Ω–∞',
      evidenceLevel: 'high',
    },
  ];

  // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç–∏–ø–∏—á–Ω—É—é –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
  if (medicalHistory.atypicalHyperplasia) {
    riskFactors.push({
      name: '–ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è',
      value: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞',
      impact: 'high',
      description: '–ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç —Ä–∏—Å–∫ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      evidenceLevel: 'high',
    });
  }

  // 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  updateProgress({ step: 'recommendations', percentage: 95, message: '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...' });
  
  const recommendations: Recommendation[] = [];
  const riskLevel = getRiskLevel(fiveYearRisk);

  // –°–∫—Ä–∏–Ω–∏–Ω–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (riskLevel === 'very_high') {
    recommendations.push({
      type: 'screening',
      priority: 'urgent',
      title: '–£—Å–∏–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      description: '–í–∞—à –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ —á–∞—Å—Ç–æ–≥–æ –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
      actionItems: [
        '–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –∫–∞–∂–¥—ã–µ 6-12 –º–µ—Å—è—Ü–µ–≤ –Ω–∞—á–∏–Ω–∞—è —Å 35-40 –ª–µ—Ç',
        '–ú–†–¢ –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑ –µ–∂–µ–≥–æ–¥–Ω–æ',
        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–Ω–∫–æ–ª–æ–≥–∞-–º–∞–º–º–æ–ª–æ–≥–∞',
        '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ BRCA1/BRCA2',
        '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ö–∏–º–∏–æ–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ —Å –≤—Ä–∞—á–æ–º'
      ],
      evidenceLevel: 'high',
    });
  } else if (riskLevel === 'high') {
    recommendations.push({
      type: 'screening',
      priority: 'high',
      title: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –±–æ–ª–µ–µ —á–∞—Å—Ç–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ —á–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ',
      actionItems: [
        '–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –µ–∂–µ–≥–æ–¥–Ω–æ –Ω–∞—á–∏–Ω–∞—è —Å 40 –ª–µ—Ç',
        '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –ú–†–¢ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–µ–º–µ–π–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏',
        '–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑',
        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –º–∞–º–º–æ–ª–æ–≥–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö'
      ],
      evidenceLevel: 'high',
    });
  } else {
    recommendations.push({
      type: 'screening',
      priority: 'medium',
      title: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      description: '–°–ª–µ–¥—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –ø–æ —Å–∫—Ä–∏–Ω–∏–Ω–≥—É',
      actionItems: [
        '–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –∫–∞–∂–¥—ã–µ 2 –≥–æ–¥–∞ –ø–æ—Å–ª–µ 50 –ª–µ—Ç',
        '–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑',
        '–ï–∂–µ–≥–æ–¥–Ω—ã–µ –æ—Å–º–æ—Ç—Ä—ã —É –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∞',
        '–û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≤—Ä–∞—á—É –ø—Ä–∏ –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö'
      ],
      evidenceLevel: 'high',
    });
  }

  // –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (familyHistory.breastCancerRelatives > 1 || familyHistory.knownGeneticMutations?.length || familyHistory.maleBreastCancer) {
    recommendations.push({
      type: 'genetic',
      priority: 'high',
      title: '–ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–°–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–æ–∑–º–æ–∂–Ω—É—é –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–µ–¥—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å',
      actionItems: [
        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –≥–µ–Ω–µ—Ç–∏–∫–∞',
        '–ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ BRCA1, BRCA2, PALB2, CHEK2',
        '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –≥–µ–Ω–µ–∞–ª–æ–≥–∏–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –≤ —Å–µ–º—å–µ',
        '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –æ–Ω–∫–æ–ª–æ–≥–æ–º',
        '–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —á–ª–µ–Ω–æ–≤ —Å–µ–º—å–∏ –ø—Ä–∏ –≤—ã—è–≤–ª–µ–Ω–∏–∏ –º—É—Ç–∞—Ü–∏–π'
      ],
      evidenceLevel: 'high',
    });
  }

  // –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏
  const bmi = calculateBMI(personalInfo.height, personalInfo.weight);
  const lifestyleRecommendations: string[] = [];
  
  if (bmi > 25) {
    lifestyleRecommendations.push('–°–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞ –¥–æ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ò–ú–¢ (18.5-24.9)');
  }
  
  lifestyleRecommendations.push(
    '–†–µ–≥—É–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–º–∏–Ω–∏–º—É–º 150 –º–∏–Ω—É—Ç —É–º–µ—Ä–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –Ω–µ–¥–µ–ª—é)',
    '–°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—Å–∫–∞—è –¥–∏–µ—Ç–∞ –±–æ–≥–∞—Ç–∞—è –æ–≤–æ—â–∞–º–∏, —Ñ—Ä—É–∫—Ç–∞–º–∏, —Ü–µ–ª—å–Ω—ã–º–∏ –∑–ª–∞–∫–∞–º–∏',
    '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è (–Ω–µ –±–æ–ª–µ–µ 1 –ø–æ—Ä—Ü–∏–∏ –≤ –¥–µ–Ω—å)',
    '–û—Ç–∫–∞–∑ –æ—Ç –∫—É—Ä–µ–Ω–∏—è',
    '–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –≤–µ—Å–∞',
    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω'
  );

  recommendations.push({
    type: 'lifestyle',
    priority: 'medium',
    title: '–ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏',
    description: '–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –º–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —Ä–∏—Å–∫ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã –Ω–∞ 20-30%',
    actionItems: lifestyleRecommendations,
    evidenceLevel: 'moderate',
  });

  // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (medicalHistory.atypicalHyperplasia || medicalHistory.lobularCarcinomaInSitu) {
    recommendations.push({
      type: 'medical',
      priority: 'high',
      title: '–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ—Ä–∏—Å–∫–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
      description: '–í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑–∞—Ö —Ç—Ä–µ–±—É—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
      actionItems: [
        '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ–Ω–∫–æ–ª–æ–≥–∞-–º–∞–º–º–æ–ª–æ–≥–∞',
        '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ö–∏–º–∏–æ–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ (—Ç–∞–º–æ–∫—Å–∏—Ñ–µ–Ω, —Ä–∞–ª–æ–∫—Å–∏—Ñ–µ–Ω)',
        '–ë–æ–ª–µ–µ —á–∞—Å—Ç–∞—è –º–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –∏ –ú–†–¢',
        '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –º–∞—Å—Ç—ç–∫—Ç–æ–º–∏–∏ –ø—Ä–∏ –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–º —Ä–∏—Å–∫–µ'
      ],
      evidenceLevel: 'high',
    });
  }

  updateProgress({ step: 'complete', percentage: 100, message: '–†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!' });

  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ —Å—Ä–µ–¥–Ω–∏–º –ø–æ–ø—É–ª—è—Ü–∏–æ–Ω–Ω—ã–º —Ä–∏—Å–∫–æ–º
  const averageRisk = GAIL_MODEL_CONSTANTS.BASE_RATES[ageKey];
  const comparedToAverage = fiveYearRisk / averageRisk;

  return {
    fiveYearRisk,
    lifetimeRisk,
    riskLevel,
    comparedToAverage,
    riskFactors,
    recommendations,
  };
};

// ========================================
// –û—Å–Ω–æ–≤–Ω–æ–π —Ö—É–∫
// ========================================

export const useGailCalculator = (): UseGailCalculatorReturn => {
  const [isCalculating, setIsCalculating] = useState(false);
  const [progress, setProgress] = useState<CalculationProgress | null>(null);
  const cacheRef = useRef<Map<string, GailCalculatorResult>>(new Map());

  const calculate = useCallback(async (input: GailCalculatorInput): Promise<GailCalculatorResult> => {
    setIsCalculating(true);
    setProgress({ step: 'start', percentage: 0, message: '–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç...' });

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
      const cacheKey = JSON.stringify(input);
      const cached = cacheRef.current.get(cacheKey);
      if (cached) {
        setProgress({ step: 'cached', percentage: 100, message: '–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –∫—ç—à–∞' });
        await new Promise(resolve => setTimeout(resolve, 500));
        return cached;
      }

      // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const validationErrors = validateInput(input);
      if (validationErrors.length > 0) {
        throw new Error(`–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${validationErrors.map(e => e.message).join(', ')}`);
      }

      // –†–∞—Å—á–µ—Ç
      const result = await calculateGailRisk(input, setProgress);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      cacheRef.current.set(cacheKey, result);
      
      return result;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∏—Å–∫–∞:', error);
      throw error;
    } finally {
      setIsCalculating(false);
      setTimeout(() => setProgress(null), 2000);
    }
  }, []);

  const clearCache = useCallback(() => {
    cacheRef.current.clear();
  }, []);

  return {
    calculate,
    validateInput,
    isCalculating,
    progress,
    formatRisk: formatRiskPercentage,
    getRiskLevel,
    clearCache,
  };
};